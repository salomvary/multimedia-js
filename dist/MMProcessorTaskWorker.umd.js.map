{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e8b450fcaf1879828f19","webpack:///./src/logger.ts","webpack:///./src/core/payload-description.ts","webpack:///./src/core/buffer-props.ts","webpack:///./src/common-utils.ts","webpack:///./src/core/buffer.ts","webpack:///./src/core/processor-task.worker.ts","webpack:///./src/common-crypto.ts","webpack:///./node_modules/uuid/v1.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./src/processors/hlsjs-ts-demux/ts-demuxer-task.ts","webpack:///./src/core/processor-task.ts","webpack:///./src/core/packet.ts","webpack:///./node_modules/buffer/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./src/processors/hlsjs-ts-demux/ts-demuxer.ts","webpack:///./src/processors/hlsjs-ts-demux/adts-utils.js","webpack:///./src/processors/hlsjs-ts-demux/mpeg-audio-parser.js","webpack:///./src/processors/hlsjs-ts-demux/exp-golomb-reader.js","webpack:///./src/processors/hlsjs-ts-demux/sample-aes-decrypter.js","webpack:///./src/processors/hlsjs-ts-demux/crypto/decrypter.js","webpack:///./src/processors/hlsjs-ts-demux/crypto/aes-crypto.js","webpack:///./src/processors/hlsjs-ts-demux/crypto/fast-aes-key.js","webpack:///./src/processors/hlsjs-ts-demux/crypto/aes-decryptor.js"],"names":[],"mappings":"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,CAAC;AACH,CAAC,CAAC,EAAE,CAAC;;;;;;;;;;AC9CL,IAAM,MAAM,GAAG,mBAAO,CAAC,CAAS,CAAC,CAAC;AAElC;IACE,OAAO,MAAM,EAAE,CAAC;AAClB,CAAC;AAFD,kCAEC;;;;;;;ACJD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;;AAEA;;;;;;;AC5GA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACvBA,+CAA2E;AAC3E,mDAAiE;AACjE,uCAA2C;AAC3C,sCAAgD;AAEhD,sCAAyC;AAEzC,2CAAyC;AACzC,4CAA2D;AAEpD,iDAAG,CAA+B;AAEzC,gCAAwC,IAAmB;IAEzD,IAAM,OAAO,GAAG,IAAI,sBAAS,CAAC,UAC5B,UAAU,EACV,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,UAAU,EACV,UAAU,EACV,kBAAkB;QAGlB,GAAG,CAAC,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A;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjuDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;AC5vDA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;ACpBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;;;;;;;ACnFA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;;ACJA;;;;;;;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","file":"MMProcessorTaskWorker.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MMProcessorTaskWorker\"] = factory();\n\telse\n\t\troot[\"MMProcessorTaskWorker\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e8b450fcaf1879828f19","// TODO: Move to Objec-TS long-term\n\nconst PREFIX_ROOT = 'mm';\n\nconst LOGGER_CONFIG_STORAGE_KEY = 'mmjs:LoggerConfig';\n\nconst DEBUG = false;\n\nconst noop = () => {};\n\nconst getPrefix = function (type: string, category: string): string {\n  const prefix = `[${PREFIX_ROOT}]:[${type}]:[${category}] >`;\n  return prefix;\n};\n\nconst regExpEscape = function(s: string): string {\n  return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n};\n\nfunction persistConfig(config: LoggerConfig): boolean {\n  if (window && !localStorage) {\n    console.error('mmjs:Logger (ERROR) > Failed to persist configuration, no localStorage API found');\n    return false;\n  } else if (!localStorage) {\n    // might happen in Worker\n    return false;\n  }\n  try {\n    localStorage.setItem(LOGGER_CONFIG_STORAGE_KEY, JSON.stringify(config));\n  } catch(err) {\n    console.error('mmjs:Logger (ERROR) > Failed to persist configuration, internal error:', err);\n    return false;\n  }\n  return true;\n}\n\nlet DEFAULT_GLOBAL_LEVEL: LoggerLevel;\n\nexport type LoggerFunc = (...args: any[]) => void;\n\nexport type Logger = {\n  debug: LoggerFunc\n  log: LoggerFunc\n  info: LoggerFunc,\n  warn: LoggerFunc\n  error: LoggerFunc\n};\n\nexport enum LoggerLevel {\n  ON = Infinity,\n  DEBUG = 5,\n  LOG = 4,\n  INFO = 3,\n  WARN = 2,\n  ERROR = 1,\n  OFF = 0\n}\n\nexport type LoggerConfig = {\n  [catMatcher: string]: LoggerLevel\n};\n\nDEFAULT_GLOBAL_LEVEL = LoggerLevel.ON;\n\nexport const defaultGlobalConfig: LoggerConfig = {'*': DEFAULT_GLOBAL_LEVEL};\n\nexport const loggerConfig: LoggerConfig = createAndGetLocalLoggerConfig();\n\nexport function createAndGetLocalLoggerConfig(): LoggerConfig {\n\n  let config: LoggerConfig;\n\n  const globalScope = self;\n\n  if (globalScope.localStorage) {\n    let object: string = localStorage.getItem(LOGGER_CONFIG_STORAGE_KEY) || '{}';\n\n    try {\n      config = JSON.parse(object);\n    } catch(err) {\n      console.warn('mmjs:Logger (WARN) > Got most likely corrupt logger config data! Running recovery routine...');\n      removeLocalLoggerConfig();\n      return createAndGetLocalLoggerConfig();\n    }\n\n    // persist if creating state first time\n    persistConfig(config);\n\n  } else { // fallback for workers (or no LocalStorage API support)\n    config = globalScope[LOGGER_CONFIG_STORAGE_KEY] || defaultGlobalConfig;\n    globalScope[LOGGER_CONFIG_STORAGE_KEY] = config;\n  }\n\n  return config;\n}\n\nexport function removeLocalLoggerConfig() {\n  delete self[LOGGER_CONFIG_STORAGE_KEY];\n  localStorage.removeItem(LOGGER_CONFIG_STORAGE_KEY);\n}\n\nexport function setLocalLoggerLevel(categoryMatcher: string, level: LoggerLevel): LoggerConfig {\n  const config = createAndGetLocalLoggerConfig();\n  config[categoryMatcher] = level;\n  // store with changes\n  persistConfig(config);\n  return config;\n}\n\nexport function getConfiguredLoggerLevelForCategory(\n  category: string,\n  defaultLevel: LoggerLevel = LoggerLevel.OFF,\n  config: LoggerConfig = createAndGetLocalLoggerConfig()): LoggerLevel {\n\n  let retLevel = defaultLevel\n\n  Object.keys(config).forEach((catMatcher: string) => {\n\n    // to avoid any possible error or regex-dos\n    catMatcher = regExpEscape(catMatcher);\n\n    const level: LoggerLevel = config[catMatcher];\n    const isCatMatching = (new RegExp('^' + catMatcher.split('*').join('.*') + '$')).test(category);\n\n    if (isCatMatching && level < retLevel) { // we are enforcing the lowest level specified by any matching category wildcard\n      retLevel = level;\n    }\n\n  })\n  return retLevel;\n}\n\nexport function checkLogLevel (level: number, catLevel: number) {\n  switch (catLevel) {\n  case LoggerLevel.DEBUG: return (level >= LoggerLevel.DEBUG) && console.debug;\n  case LoggerLevel.LOG: return (level >= LoggerLevel.LOG) && console.log;\n  case LoggerLevel.INFO: return (level >= LoggerLevel.INFO) && console.info;\n  case LoggerLevel.WARN: return (level >= LoggerLevel.WARN) && console.warn;\n  case LoggerLevel.ERROR: return (level >= LoggerLevel.ERROR) && console.error;\n  }\n}\n\nexport const getLogger = function (category: string, level: number = LoggerLevel.ON): Logger {\n\n  level = getConfiguredLoggerLevelForCategory(category, level);\n\n  if (DEBUG) {\n    console.log(`mmjs:Logger (DEBUG mode) > Set-up category <${category}> with level ${level}`);\n  }\n\n  return {\n    debug: checkLogLevel(level, LoggerLevel.DEBUG) ? console.debug.bind(console, getPrefix('d', category)) : noop,\n    log: checkLogLevel(level, LoggerLevel.LOG) ? console.log.bind(console, getPrefix('l', category)) : noop,\n    info: checkLogLevel(level, LoggerLevel.INFO) ? console.info.bind(console, getPrefix('i', category)) : noop,\n    warn: checkLogLevel(level, LoggerLevel.WARN) ? console.warn.bind(console, getPrefix('w', category)) : noop,\n    error: checkLogLevel(level, LoggerLevel.ERROR) ? console.error.bind(console, getPrefix('e', category)) : noop\n  };\n};\n\nexport function makeLogTimestamped (...args): string {\n  let message = `[${(new Date()).toISOString()}]`;\n  args.forEach((arg) => {\n    message += ' ' + arg;\n  });\n  return message;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/logger.ts","import { isIntegerIEEE754, isInteger } from '../common-utils';\n\nexport type MimeType = string;\nexport type MimeTypes = MimeType[];\n\n/*\nexport function isValidMimeTypeString(mimeType: string) {\n  //\n}\n*/\n\n// ADD common codec-strings\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types\n *\n */\n\nexport enum CommonMimeTypes {\n  AUDIO_MP3 = 'audio/mpeg',\n  AUDIO_AAC = 'audio/aac',\n  AUDIO_OPUS = 'audio/opus',\n  VIDEO_MP4 = 'video/mp4',\n  VIDEO_AVC = 'video/avc',\n  VIDEO_AAC = 'video/aac'\n}\n\nexport enum MimetypePrefix {\n  AUDIO = 'audio',\n  VIDEO = 'video',\n  TEXT = 'text',\n  APPLICATION = 'application'\n}\n\nexport const UNKNOWN_MIMETYPE = 'unknown/*';\n\n// TODO: parse & validate mime-types and codec strings\n/**\n * @see https://en.wikipedia.org/wiki/Media_type\n *\n */\n\n/**\n *\n * @param mimeType\n * @param codec\n * @returns example: 'video/mp4; codecs=avc1.64001f'\n * // TODO: for several codecs in one container\n */\nfunction appendCodecToMimeType (mimeType: MimeType, codec: string): string {\n  return mimeType + '; codecs=' + codec;\n}\n\nfunction doesMimetypeHaveCodec(mimeType: string): boolean {\n  return mimeType.indexOf('codecs=') >= 0;\n}\n\nexport class PayloadDescriptor {\n  /**\n   * mime-type if defined\n   */\n  readonly mimeType: MimeType = null;\n\n  /**\n   * unit-less factor to deal with arbitrary integer sample-rates without loosing precision [1]\n   */\n  readonly sampleDurationNumerator: number;\n\n  /**\n   * integer bit-depth of one sample\n   */\n  readonly sampleDepth: SampleBitDepth = SampleBitDepth.UNSPECIFIED;\n\n  /**\n   * Hertz [Hz]\n   */\n  readonly sampleRateInteger: number;\n\n  /**\n   * data format/layout applicable for raw signal packets\n   */\n  readonly dataFormat: PayloadDataFormat = PayloadDataFormat.UNSPECIFIED;\n  readonly dataLayout: PayloadDataLayout = PayloadDataLayout.UNSPECIFIED;\n\n  /**\n   * payload specific details (applicable to audio/video/text etc only e.g or codec-data related)\n   */\n  details: PayloadDetails = new PayloadDetails();\n\n  elementaryStreamId: number = NaN; // FIXME: make this a string\n\n  /**\n   * codec (if applicable)\n   */\n  codec: string = null;\n\n  constructor (mimeType: string,\n    sampleRateInteger: number = 0,\n    sampleDepth: number = 0,\n    sampleDurationNumerator: number = 1) {\n\n    if (!isIntegerIEEE754(sampleRateInteger) || !isInteger(sampleDurationNumerator)) {\n      throw new Error(`sample-rate has to be safe-int (=${sampleRateInteger}) and duration-numerator has to be int too (=${this.sampleDurationNumerator}).`);\n    }\n\n    this.mimeType = mimeType.toLowerCase();\n\n    this.sampleDurationNumerator = sampleDurationNumerator;\n    this.sampleDepth = sampleDepth;\n    this.sampleRateInteger = sampleRateInteger;\n\n    this.dataFormat = PayloadDataFormat.UNSPECIFIED;\n    this.dataLayout = PayloadDataLayout.UNSPECIFIED;\n  }\n\n  // TODO: put mime-type specific stuff in child object that specializes on mime-types?\n\n  getFullMimeType(): string {\n    if (!this.codec) {\n      return this.mimeType;\n    }\n    if (doesMimetypeHaveCodec(this.mimeType)) { // FIXME: we should maybe rather throw here\n      return this.mimeType;\n    }\n    return appendCodecToMimeType(this.mimeType, this.codec);\n  }\n\n  getMediaSubtype(): string {\n    return this._getMimeTypePart(1);\n  }\n\n  getMediaType(): string {\n    return this._getMimeTypePart(0);\n  }\n\n  protected _getMimeTypePart(i: number) {\n    try {\n      return this.mimeType.split('/')[i];\n    } catch(err) {\n      throw new Error('Malformed mime-type: ' + this.mimeType);\n    }\n  }\n\n  hasCodec(): boolean {\n    return !!this.codec;\n  }\n\n  /**\n   * Sample-duration in normal units ([1/Hz] <=> [s])\n   *\n   * By default the sampleRate is expected to be in 1*Hz. The unit to expect can be scaled using\n   * the optional unit-less numerator property to N*Hz. Meaning that the unit is not 1/[s] anymore but 1/(N*[s]),\n   * representing the number of sample in N seconds.\n   *\n   * That means that any sample-rates of the form no-of-samples-per-N-seconds [Hz],\n   * where no-of-samples and N is should be integers, can be represented without precision loss.\n   *\n   * Also floating point values may be used but this may yield precision loss when computing the duration here.\n   */\n  getSampleDuration() {\n    return this.sampleDurationNumerator / this.sampleRateInteger;\n  }\n\n  /**\n   * Sampling-rate in normal units ([Hz] <=> [1/s])\n   *\n   * see getSampleDuration, simply the inverted value\n   */\n  getSamplingRate (): number {\n    return this.sampleRateInteger / this.sampleDurationNumerator;\n  }\n\n  /**\n   * Returns size of one sample in bytes\n   */\n  getSampleSize(): number {\n    return this.sampleDepth / 8;\n  }\n\n  isAudio() {\n    return this.mimeType.startsWith('audio/');\n  }\n\n  isVideo() {\n    return this.mimeType.startsWith('video/');\n  }\n\n  isText() {\n    return this.mimeType.startsWith('text/');\n  }\n\n  isImage() {\n    return this.mimeType.startsWith('image/');\n  }\n\n  isApplicationSpecific() {\n    return this.mimeType.startsWith('application/');\n  }\n\n  isFont() {\n    return this.mimeType.startsWith('font/');\n  }\n\n  isJson() {\n    return this.mimeType === ('application/json');\n  }\n\n  isXml() {\n    return this.mimeType === ('application/xml');\n  }\n\n  toString() {\n    return `[<${this.mimeType} codec=\"${this.codec}\"> @${this.getSamplingRate()}[Hz]|1/(${this.getSampleDuration().toExponential()}[s]) * ${this.sampleDepth}bit #{${this.details.toString()}}]`;\n  }\n}\n\nexport class PayloadDetails {\n\n  /*\n  clone(details: PayloadDetails) {\n\n  }\n  */\n\n  sequenceDurationInSeconds: number = NaN;\n\n  // place to put generic codec init-data // TODO: get rid of number[] here\n  codecConfigurationData: Uint8Array | number[] = null\n\n  // video\n  width: number = 0;\n  height: number = 0;\n\n  // color-domains/channels\n\n  // audio\n\n  samplesPerFrame: number = 1;\n  numChannels: number = 0\n  constantBitrate: number = NaN;\n\n  // text\n  // ...\n\n  // time-vs-frequency domains\n  // ...\n\n  toString() {\n    return `width=${this.width}[px];height=${this.height}[px];samplesPerFrame=${this.samplesPerFrame};cbr=${this.constantBitrate}[b/s];numChannels=${this.numChannels};codecConfigSize=${this.codecConfigurationData ? this.codecConfigurationData.length : 0}`\n  }\n}\n\nexport class PayloadCodec {\n  static isAvc(codec: string) {\n    return codec.startsWith('avc1');\n  }\n\n  static isAac(codec: string) {\n    return codec.startsWith('mp4a');\n  }\n\n  static isMp3(codec: string) {\n    return codec.startsWith('mp3a');\n  }\n}\n\nexport enum PayloadDataFormat {\n  UNSPECIFIED,\n  S_LE,\n  S_BE,\n  U_LE,\n  U_BE\n}\n\nexport enum PayloadDataLayout {\n  UNSPECIFIED,\n  INTERLEAVED,\n  PROGRESSIVE\n}\n\nexport enum SampleBitDepth {\n  UNSPECIFIED = NaN,\n  VARIABLE = 0,\n  FOUR = 4,\n  EIGHT = 8,\n  TWELVE = 12,\n  SIXTEEN = 16,\n  THIRTYTWO = 32\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/payload-description.ts","import { PayloadDescriptor, UNKNOWN_MIMETYPE } from './payload-description';\n\n/**\n * @class\n * Describes the payload of a buffer, how many samples it contains of that, and time-contextual information\n * for decrypting/decoding/presentation of the buffer.\n *\n * Generic media-key and parameters can be included as metadata around the buffer.\n *\n * Many buffer \"slices\" can (but must not) share one buffer-properties object instance, where that has advantages.\n *\n */\nexport class BufferProperties extends PayloadDescriptor {\n\n  static clone(props: BufferProperties) {\n    const newProps = new BufferProperties(\n      props.mimeType,\n      props.sampleRateInteger,\n      props.sampleDepth,\n      props.sampleDurationNumerator,\n      props.samplesCount,\n      props.isBitstreamHeader,\n      props.isKeyframe,\n      props.timestampDelta,\n      props.mediaKey,\n      props.tags);\n\n    newProps.elementaryStreamId = props.elementaryStreamId;\n    newProps.details = props.details;\n    newProps.codec = props.codec;\n    return newProps;\n  }\n\n  static fromTransferable(props: BufferProperties) {\n    return BufferProperties.clone(props);\n  }\n\n  constructor (\n    mimeType = UNKNOWN_MIMETYPE,\n    sampleRateInteger = 0,\n    sampleDepth = 0,\n    sampleDurationNumerator = 1,\n      public samplesCount: number = 0,\n      public isBitstreamHeader: boolean = false,\n      public isKeyframe: boolean = false,\n      public timestampDelta: number = 0,\n      public mediaKey: any = null,\n      public tags: Set<string> = new Set()\n  ) {\n    super(mimeType, sampleRateInteger, sampleDepth, sampleDurationNumerator);\n    this.samplesCount = samplesCount;\n  }\n\n  clone(): BufferProperties {\n    const newProps = BufferProperties.clone(this);\n    return newProps;\n  }\n\n  /**\n   * Normal units [s]\n   */\n  getSliceDuration () {\n    return this.samplesCount * this.getSampleDuration();\n  }\n\n  toString() {\n    const payloadToString = super.toString();\n    return `[[#${this.samplesCount} x ${this.isKeyframe ? 'KEY' : 'P/B'}-${this.isBitstreamHeader ? 'HEADER(s)' : 'FRAME(s)'} => ${payloadToString}]]`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/buffer-props.ts","import { VoidCallback, OneDeepNestedArray } from './common-types';\n\nexport const noop = () => {};\n\n/**\n *\n * @param s template-able string value.\n * ex: template ```var s = `${myvar}` ``` is equivalent to ```var t = makeTemplate(\"${myvar}\"); s = eval(t)```\n * sometimes it can be useful to define the form of a template without evaluating it,\n * but pass it to the component that will do that later and thus separate these two steps as shown above.\n * notice that the variables used in the prepared template can only relate to the scope(s) in which\n * the template effectively gets evaluated, not where it gets created with this function here.\n * if you want to evaluate values from one specific context to a string, but delegate the evaluation, use OOP or a closure.\n * @returns {string} value that can be passed to `eval` in order to be evaluated as a template.\n *\n */\nexport function makeTemplate(s: string): string { return `\\`${s}\\`` }\n\n/**\n *\n * @returns true on finite values, false on Infinity\n *          returns false on anything that is not convertible to a number (when not a number type), see isConvertibleToNumber\n */\nexport function isNumber (n: number): boolean {\n  return Number.isFinite(n);\n}\n\n/**\n *\n * @returns true on: empty string, booleans, null, finite number values and +/- Infinity\n *          false on: everything else -> objects, non-empty string, undefined, NaN (obviously)\n */\nexport function isConvertibleToNumber (n: any): boolean {\n  return !isNaN(n);\n}\n\nexport function isInteger(n: number): boolean { return Number.isInteger(n) }\n\nexport function isIntegerIEEE754(n: number): boolean { return Number.isSafeInteger(n) }\n\n/**\n *\n * @returns a finite number or +/- Infinity (if n was that value)\n * @throws error when value is not convertible to a number\n */\nexport function toNumber (n: any): number {\n  if (isConvertibleToNumber(n)) {\n    return Number(n);\n  }\n  throw new Error('Value does not convert to number: ' + n);\n}\n\nexport function flattenOneDeepNestedArray<T>(a: OneDeepNestedArray<T>): T[] {\n  return [].concat(...a);\n}\n\nexport function unsafeFlattenAnyNestedArray<T>(arr: any[]): T[] {\n  return arr.reduce(function (flat, toFlatten) {\n    return flat.concat(Array.isArray(toFlatten) ? unsafeFlattenAnyNestedArray(toFlatten) : toFlatten);\n  }, []);\n}\n\nexport function lastOfArray<T>(a: T[]): T | null {\n  if (!a.length) {\n    return null;\n  }\n  return a[a.length - 1];\n}\n\n// TODO: allocation methods\n// TODO: allow using \"fast but unsafe\" allocation methods in V8/Nodejs via Buffer.allocUnsafe\n\n/**\n * Copies source data into a previously allocated destination buffer (see memcpy)\n */\nexport function copyArrayBuffer(\n  src: ArrayBuffer, dest: ArrayBuffer,\n  length: number = src.byteLength,\n  srcOffset: number = 0, destOffset: number = 0) {\n\n  if (srcOffset + length >= src.byteLength) {\n    throw new Error(`Source buffer is too small for copy target of ${length} bytes at offset ${srcOffset}`);\n  }\n\n  if (destOffset + length >= dest.byteLength) {\n    throw new Error(`Destination buffer is too small for copy target of ${length} bytes to offset at ${destOffset}`);\n  }\n\n  const destView = new Uint8Array(dest);\n  const srcView = new Uint8Array(src, srcOffset, length);\n  destView.set(srcView, destOffset);\n}\n\n/**\n * Copies all data from one buffer into a new one, optionnally with offset and size arguments\n * @param buffer\n * @param begin\n * @param end\n */\nexport function copyToNewArrayBuffer(buffer: ArrayBuffer, offset: number = 0, size?: number): ArrayBuffer {\n  if (offset >= buffer.byteLength || offset + size > buffer.byteLength) {\n    throw new Error(`Offset or size are out of array-buffer bounds: ${offset}/${size}, but byte-length is ${buffer.byteLength}`);\n  }\n  /**\n   * The slice() method returns a shallow copy of a portion of an array\n   * into a new array object selected from begin to end (end not included).\n   * The original array will not be modified.\n   */\n  return buffer.slice(offset, offset + size);\n}\n\nexport function copyArrayBufferCollection(abs: ArrayBuffer[]) {\n  return abs.map((ab) => copyToNewArrayBuffer(ab));\n}\n\n/**\n * Copies only the window that the view points to into a new buffer\n * @param typedArray\n */\nexport function allocAndCopyTypedArraySlice(typedArray: ArrayBufferView): ArrayBuffer {\n  return copyToNewArrayBuffer(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n}\n\n/**\n * Concatenates two existing buffers into a newly allocated third one\n * @param buffer1\n * @param buffer2\n */\nexport function concatArrayBuffers (buffer1: ArrayBuffer, buffer2: ArrayBuffer): ArrayBuffer {\n  if (!buffer1) {\n    return buffer2;\n  } else if (!buffer2) {\n    return buffer1;\n  }\n  const newBuffer = new ArrayBuffer(buffer1.byteLength + buffer2.byteLength);\n  const view = new Uint8Array(newBuffer);\n  view.set(new Uint8Array(buffer1), 0);\n  view.set(new Uint8Array(buffer2), buffer1.byteLength);\n  return newBuffer;\n}\n\nexport function concatArrays<T> (arg0: T[], ...args: T[][]): T[] {\n  return Array.prototype.concat.apply(arg0, args);\n}\n\n// tslint:disable-next-line: ban-types\nexport function forEachOwnPropKeyInObject<T> (object: Object, callback: (el: T) => void) {\n  for (const key in object) {\n    if (object.hasOwnProperty(key)) {\n      const element = object[key];\n      callback(element);\n    }\n  }\n}\n\nexport function dispatchAsyncTask (func: VoidCallback, timeoutSeconds: number = 0): number {\n  return <any> setTimeout(func, timeoutSeconds * 1000);\n}\n\nexport function cancelAsyncTask (id: number): void {\n  clearTimeout(id);\n}\n\nexport function parseOptionsFromQueryString (\n  query: string = (window as any).location.search,\n  validProperties: string[] = null): {[property: string]: string} {\n  if (!query) {\n    return {};\n  }\n\n  if (!query.startsWith('?')) {\n    throw new Error('Malformed query string, should start with a `?`');\n  }\n\n  query = query.substr(1);\n  const queryTokens = query.split(/&|=/);\n\n  if (queryTokens.length % 2 !== 0) {\n    throw new Error('Invalid query string in URL, uneven amount of tokens');\n  }\n\n  const options = {};\n\n  let i = 0;\n  while (i <= queryTokens.length) {\n    if (validProperties) {\n      let validPropsIndex = validProperties.indexOf(queryTokens[i]);\n      if (validPropsIndex >= 0) {\n        options[validProperties[validPropsIndex]] = queryTokens[i + 1];\n      }\n    } else if (queryTokens[i]) {\n      options[queryTokens[i]] = queryTokens[i + 1];\n    }\n    i = i + 2;\n  }\n\n  return options;\n}\n\nexport function arrayBufferToHexdump (buffer: ArrayBuffer): string {\n  return Array.prototype.map.call(new Uint8Array(buffer),\n    (x) => ('00' + x.toString(16)) // map each by to a a string with base16\n      .slice(-2))\n      .join(' ');\n}\n\nexport const utf8CharsToString = (bytes: Uint8Array): string => {\n  return String.fromCharCode.apply(null, bytes)\n}\n\nexport const unicodeCharsToString = (hexChars: Uint16Array): string => {\n  return String.fromCharCode.apply(null, hexChars)\n}\n\nexport function utf8StringToBuffer(str: string): ArrayBuffer {\n  let buf = new ArrayBuffer(str.length); // 2 bytes for each char\n  let bufView = new Uint8Array(buf);\n  for (let i=0, strLen=str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n\n/**\n * Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function hexToBytes (s: string): Uint8Array {\n  let len = s.length >> 1;\n  let arr = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    arr[i] = parseInt(s.substr(i * 2, 2), 16);\n  }\n  return arr;\n}\n\nexport function utf8decode (str) {\n  let bytes = new Uint8Array(str.length * 4);\n  let b = 0;\n  for (let i = 0, j = str.length; i < j; i++) {\n    let code = str.charCodeAt(i);\n    if (code <= 0x7f) {\n      bytes[b++] = code;\n      continue;\n    }\n    if (code >= 0xD800 && code <= 0xDBFF) {\n      let codeLow = str.charCodeAt(i + 1);\n      if (codeLow >= 0xDC00 && codeLow <= 0xDFFF) {\n        // convert only when both high and low surrogates are present\n        code = ((code & 0x3FF) << 10) + (codeLow & 0x3FF) + 0x10000;\n        ++i;\n      }\n    }\n    if ((code & 0xFFE00000) !== 0) {\n      bytes[b++] = 0xF8 | ((code >>> 24) & 0x03);\n      bytes[b++] = 0x80 | ((code >>> 18) & 0x3F);\n      bytes[b++] = 0x80 | ((code >>> 12) & 0x3F);\n      bytes[b++] = 0x80 | ((code >>> 6) & 0x3F);\n      bytes[b++] = 0x80 | (code & 0x3F);\n    } else if ((code & 0xFFFF0000) !== 0) {\n      bytes[b++] = 0xF0 | ((code >>> 18) & 0x07);\n      bytes[b++] = 0x80 | ((code >>> 12) & 0x3F);\n      bytes[b++] = 0x80 | ((code >>> 6) & 0x3F);\n      bytes[b++] = 0x80 | (code & 0x3F);\n    } else if ((code & 0xFFFFF800) !== 0) {\n      bytes[b++] = 0xE0 | ((code >>> 12) & 0x0F);\n      bytes[b++] = 0x80 | ((code >>> 6) & 0x3F);\n      bytes[b++] = 0x80 | (code & 0x3F);\n    } else {\n      bytes[b++] = 0xC0 | ((code >>> 6) & 0x1F);\n      bytes[b++] = 0x80 | (code & 0x3F);\n    }\n  }\n  return bytes.subarray(0, b);\n}\n\nexport const MAX_UINT_32 = 4294967296;\nexport const MAX_UINT_16 = 65536;\n\nexport const readUint16 = (buffer: Uint8Array, offset: number): number => {\n  const val = buffer[offset] << 8 |\n              buffer[offset + 1];\n  return val < 0 ? MAX_UINT_16 + val : val;\n}\n\nexport const readUint32 = (buffer: Uint8Array, offset: number): number => {\n  const val = buffer[offset] << 24 |\n              buffer[offset + 1] << 16 |\n              buffer[offset + 2] << 8 |\n              buffer[offset + 3];\n  return val < 0 ? MAX_UINT_32 + val : val;\n}\n\nexport function writeUint32 (buffer: Uint8Array, offset: number, value: number): number {\n  buffer[offset] = value >> 24;\n  buffer[offset+1] = (value >> 16) & 0xff;\n  buffer[offset+2] = (value >> 8) & 0xff;\n  buffer[offset+3] = value & 0xff;\n  return 4;\n}\n\nexport function writeInt32 (data: Uint8Array, offset: number, value: number): number {\n  data[offset] = (value >> 24) & 255;\n  data[offset + 1] = (value >> 16) & 255;\n  data[offset + 2] = (value >> 8) & 255;\n  data[offset + 3] = value & 255;\n  return 4;\n}\n\nexport function decodeInt32 (s: string): number {\n  return (s.charCodeAt(0) << 24) | (s.charCodeAt(1) << 16) |\n           (s.charCodeAt(2) << 8) | s.charCodeAt(3);\n}\n\n/**\n *\n * @param d\n * @param referenceDae defaults to midnight after Jan. 1, 1904\n */\nexport function encodeDate (d: number, referenceDae: number = -2082844800000): number {\n  return ((d - referenceDae) / 1000) | 0;\n}\n\nexport function encodeFloat_16_16 (f: number): number {\n  return (f * 0x10000) | 0;\n}\n\nexport function encodeFloat_2_30 (f: number): number {\n  return (f * 0x40000000) | 0;\n}\n\nexport function encodeFloat_8_8 (f: number): number {\n  return (f * 0x100) | 0;\n}\n\nexport function encodeLang (s: string): number {\n  return ((s.charCodeAt(0) & 0x1F) << 10) | ((s.charCodeAt(1) & 0x1F) << 5) | (s.charCodeAt(2) & 0x1F);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common-utils.ts","import { allocAndCopyTypedArraySlice, copyToNewArrayBuffer } from '../common-utils';\nimport { BufferProperties } from './buffer-props';\n\n/**\n * @class\n * A BufferSlice wraps a buffer of binary data (as an ArrayBuffer).\n *\n * The slice is what is represented by the offset and length properties (r/w),\n *\n * which can be modified at any time.\n *\n * These values are in turn used by the various DataView getters to form the data-representation window.\n * Those methods have optional arguments that overload the latter values.\n *\n * BufferSlice can be deep-copied (except properties), and ArrayBuffer.prototype.slice will be called. See `copy` methods.\n *\n * To actually get a clone of a BufferSlice instance with different offset/length window and new properties,\n * use the `unwrap` method.\n *\n * The `unwrap` method is convenient when building zero-copy parsers/demuxers to create new buffer instances\n * to push to outputs based on one input buffer slice type and the new buffers are simply windows into the input data.\n *\n */\nexport class BufferSlice {\n\n  static mapArrayBuffers (bufferSlices: BufferSlices): ArrayBuffer[] {\n    return bufferSlices.map((bs) => bs.arrayBuffer);\n  }\n\n  static fromTypedArray (typedArray: ArrayBufferView, props?: BufferProperties): BufferSlice {\n    return new BufferSlice(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength, props);\n  }\n\n  /**\n     * Awakes transferable zombies from the dead\n     *\n     * bufferSlice A possibly \"dead\" BufferSlice that has been\n     *                    cloned to be transferred into or out of a Worker\n     *                    and stripped of his methods\n     * @returns A new and alive BufferSlice\n     */\n  static fromTransferable (bufferSlice: BufferSlice) {\n    return new BufferSlice(\n      bufferSlice.arrayBuffer,\n      bufferSlice.offset,\n      bufferSlice.length,\n      BufferProperties.fromTransferable(bufferSlice.props)\n    );\n  }\n\n   /**\n     * original existing BufferSlice representing a data window into an existing ArrayBuffer\n     * @returns a new slice with a newly allocated underlying ArrayBuffer that is a copy of the original slice window data\n     */\n  static copy (original: BufferSlice): BufferSlice {\n    const slice = new BufferSlice(copyToNewArrayBuffer(original.arrayBuffer, original.offset, original.length));\n    slice.props = original.props;\n    return slice;\n  }\n\n    /**\n     * Metatdata\n     */\n    props: BufferProperties;\n\n    /**\n     * Underlying memory handle\n     */\n    readonly arrayBuffer: ArrayBuffer;\n\n    /**\n     * Offset into original allocated memory space (ArrayBuffer)\n     */\n    readonly offset: number;\n\n    /**\n     * Bytes amount / size i.e number of 8-bit characters\n     */\n    readonly length: number;\n\n    constructor (arrayBuffer: ArrayBuffer,\n      offset: number = 0,\n      length: number = arrayBuffer.byteLength,\n      props: BufferProperties = new BufferProperties()) {\n      this.arrayBuffer = arrayBuffer;\n\n      if (offset < 0 || length < 0) {\n        throw new Error('Illegal parameters for BufferSlice window');\n      }\n\n      this.offset = offset;\n      this.length = length;\n\n      this.props = props;\n    }\n\n    /**\n     *\n    characterSizeBits\n    {number} Number of characters needed in a specific encoding (default 8-bit === 1bytes)\n     */\n    size (characterSizeBits: number = 8): number {\n      if (characterSizeBits === 8) {\n        return this.length;\n      }\n      if (characterSizeBits === 16) {\n        return this.length / 2;\n      }\n      if (characterSizeBits === 32) {\n        return this.length / 4;\n      }\n      if (characterSizeBits === 64) {\n        return this.length / 8;\n      }\n      throw new Error('Invalid character bitsize: ' + characterSizeBits);\n    }\n\n    /**\n     * Returns a *new* slice instance around the exact same data buffer with a fresh vanilla properties object (by default),\n     * and the given offset/length window _relative_ to the orignal one (*important*).\n     *\n     * That means that one can only restrain the window from the previous point of view, but not extend it.\n     * Hence the method name.\n     *\n     * The offset is relative and will be added to the original slice one to form the new absolute offset.\n     * The length is arbitrary but can not exceed the length of the original slice (and error will be thrown).\n     * By default (no length passed), the length will correspond to the remainder of the slice based on its new offset.\n     *\n     * Optionally new properties can be passed directly here.\n     *\n    offset\n    length\n    props\n     * @returns new BufferSlice\n     */\n    unwrap (\n      offset: number,\n      length?: number,\n      props?: BufferProperties): BufferSlice {\n      if (isNaN(offset)) {\n        throw new Error('data bytes offset must be a number');\n      }\n\n      if (length > this.length) {\n        throw new Error(`can not unwrap longer slice (${length}) than original length: ${this.length}`);\n      }\n\n      offset += this.offset;\n\n      if (isNaN(length)) {\n        length = this.arrayBuffer.byteLength - offset;\n      }\n\n      const slice = new BufferSlice(this.arrayBuffer, offset, length, props);\n      return slice;\n    }\n\n    /**\n     * offsetIncrement Amount of bytes to move front of window forward\n     * @see unwrap called internally, same limitations apply\n     * @returns new BufferSlice\n     */\n    shrinkFront (offsetIncrement: number) {\n      return this.unwrap(this.offset + offsetIncrement, this.length - offsetIncrement);\n    }\n\n    /**\n     * lengthReduction Amount of bytes to move back of window in retreat\n     * @returns new BufferSlice\n     */\n    shrinkBack (lengthReduction: number) {\n      return this.unwrap(this.offset, this.length - lengthReduction);\n    }\n\n    /**\n     * Copies the actual underlying data and creates a new slice with the same properties.\n     *\n     * @see BufferSlice.copy (static method)\n     */\n    copy (): BufferSlice {\n      return BufferSlice.copy(this);\n    }\n\n    /**\n     * Returns an ArrayBufferView for the internal buffer based on the current offset/length of this slice.\n     *\n     * This should be the default method to pass the data slice into nested components for processing.\n     *\n     */\n    getUint8Array (): Uint8Array {\n      return new Uint8Array(this.arrayBuffer, this.offset, this.length);\n    }\n\n    /**\n     *\n     * Returns an ArrayBufferView for the internal buffer based on the current offset/length of this slice.\n     *\n     * This should be the default method to pass the data slice into nested components for deep-analysis or manipulation.\n     *\n     */\n    getDataView (): DataView {\n      return new DataView(this.arrayBuffer, this.offset, this.length);\n    }\n\n    /**\n     *\n     * Creates a view of the slice without copying but exposing the Node.js Buffer interface instead of Uint8Array or ArrayBufferView\n     *\n     * May be an alternative to getUint8Array in certain cases when interacting with Nodejs APIs or streams.\n     *\n     * This might only work on Node.js or browser envs that have a Buffer constructor.\n     *\n     */\n    getBuffer (): Buffer {\n      if (!Buffer) {\n        throw new Error('`Buffer` is not supported as built-in class');\n      }\n      return Buffer.from(this.arrayBuffer, this.offset, this.length);\n    }\n\n    /**\n     * allocates a new ArrayBuffer from the current slice\n     */\n    newArrayBuffer (): ArrayBuffer {\n      return allocAndCopyTypedArraySlice(this.getDataView());\n    }\n\n    toString(): string {\n      return `slice @${this.offset} of length ${this.length} in buffer of ${this.arrayBuffer.byteLength} bytes`;\n    }\n\n    // TODO: method to create \"grow\" new BufferSlice from original data and (list of) additional slices\n\n}\n\nexport type BufferSlices = BufferSlice[];\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/buffer.ts","import { ProcessorTask } from './processor-task';\n\nimport { makeUUID_v1 } from '../common-crypto';\n\nimport { getLogger } from '../logger';\n\nimport { processTSDemuxerAppend } from '../processors/hlsjs-ts-demux/ts-demuxer-task';\n\nconst context: Worker = self as any;\nconst workerId = makeUUID_v1();\nconst { log } = getLogger(`base-worker-${workerId}`);\n\n(function () {\n  let nextJobId = 0;\n\n  // Respond to message from parent thread\n  context.addEventListener('message', onMessage);\n\n  function onMessage (event: Event) {\n    log('Got message passed:', event);\n\n    processTask(<ProcessorTask> (event as any).data);\n  }\n\n  function processTask (task: ProcessorTask) {\n    task.workerContext = context;\n\n    log(`Processing task \"${task.name}\" under job-id ${nextJobId} now ...`);\n\n    const startTime = performance.now();\n\n    switch (task.name) {\n    case 'tsdemuxer':\n      processTSDemuxerAppend(task);\n      break;\n    default:\n      throw new Error('Unknown task: ' + task.name);\n    }\n\n    const endTime = performance.now();\n    const latencyMs = endTime - startTime;\n\n    log(`Processed task in ${latencyMs.toFixed(3)} ms, done with job-id ${nextJobId}`);\n\n    nextJobId++;\n  }\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/processor-task.worker.ts","const uuidv1 = require('uuid/v1');\n\nexport function makeUUID_v1 (): number {\n  return uuidv1();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common-crypto.ts","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/uuid/v1.js\n// module id = 7\n// module chunks = 0","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/uuid/lib/rng-browser.js\n// module id = 8\n// module chunks = 0","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/uuid/lib/bytesToUuid.js\n// module id = 9\n// module chunks = 0","import { ProcessorTask, postTaskMessage } from '../../core/processor-task';\nimport { CommonMimeTypes } from '../../core/payload-description';\nimport { Packet } from '../../core/packet';\nimport { BufferSlice } from '../../core/buffer';\n\nimport { getLogger } from '../../logger';\n\nimport { TSDemuxer } from './ts-demuxer';\nimport { BufferProperties } from '../../core/buffer-props';\n\nconst {log} = getLogger('TSDemuxerTask');\n\nexport function processTSDemuxerAppend (task: ProcessorTask) {\n\n  const demuxer = new TSDemuxer((\n    audioTrack,\n    avcTrack,\n    id3Track,\n    txtTrack,\n    timeOffset,\n    contiguous,\n    accurateTimeOffset\n    ) => {\n\n    log(audioTrack, avcTrack);\n\n    audioTrack.samples.forEach((sample) => {\n\n      const unit = sample.unit;\n\n      const bufferSlice = new BufferSlice(\n        unit.buffer.slice(0),\n        unit.byteOffset,\n        unit.byteLength);\n\n      const mimeType = audioTrack.isAAC ? CommonMimeTypes.AUDIO_AAC : CommonMimeTypes.AUDIO_MP3;\n\n      bufferSlice.props = new BufferProperties(mimeType);\n      bufferSlice.props.codec = audioTrack.isAAC ? audioTrack.codec : 'mp3a'; // FIXME\n      bufferSlice.props.elementaryStreamId = audioTrack.pid;\n\n      bufferSlice.props.details.codecConfigurationData = audioTrack.config;\n\n      const packet = Packet.fromSlice(bufferSlice, sample.dts, sample.dts - sample.pts);\n\n      postTaskMessage(task.workerContext, {\n        packet\n      });\n\n    });\n\n    avcTrack.samples.forEach((sample) => {\n\n      sample.units.forEach((unit: {data: Uint8Array, type: number}) => {\n        const bufferSlice = new BufferSlice(\n          unit.data.buffer.slice(0),\n          unit.data.byteOffset,\n          unit.data.byteLength);\n\n        bufferSlice.props = new BufferProperties(CommonMimeTypes.VIDEO_AVC);\n\n        bufferSlice.props.codec = avcTrack.codec;\n        bufferSlice.props.elementaryStreamId = avcTrack.pid;\n\n        bufferSlice.props.isKeyframe = sample.key || unit.type === 5; // IDR\n        bufferSlice.props.isBitstreamHeader = unit.type >= 7 && unit.type <= 8; // SPS/PPS\n\n        bufferSlice.props.details.width = avcTrack.width;\n        bufferSlice.props.details.height = avcTrack.height;\n\n        if (unit.type === 5) {\n          bufferSlice.props.tags.add('idr');\n        } else if (unit.type === 6) {\n          bufferSlice.props.tags.add('sei');\n        } else if (unit.type === 7) {\n          bufferSlice.props.tags.add('sps');\n        } else if (unit.type === 8) {\n          bufferSlice.props.tags.add('pps');\n        }\n\n        const packet = Packet.fromSlice(bufferSlice, sample.dts, sample.dts - sample.pts);\n\n        postTaskMessage(task.workerContext, {\n          packet\n        });\n\n      });\n    });\n\n    postTaskMessage(task.workerContext, {\n      packet: Packet.newFlush()\n    });\n\n    return void 0;\n  });\n\n  demuxer.reset();\n\n  const p = Packet.fromTransferable(task.packet);\n\n  p.forEachBufferSlice((bufferSlice) => {\n    demuxer.append(bufferSlice.getUint8Array(), 0, true, 0);\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/processors/hlsjs-ts-demux/ts-demuxer-task.ts","import { Packet } from './packet';\n\nexport type ProcessorTask = {\n  workerContext: Worker,\n  name: string,\n  packet: Packet,\n};\n\nexport type ProcessorTaskMessage = {\n  packet: Packet\n};\n\nexport function postTaskMessage (context: Worker, wm: ProcessorTaskMessage) {\n  context.postMessage(wm, wm.packet.mapArrayBuffers());\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/processor-task.ts","import { BufferSlices, BufferSlice } from './buffer';\nimport { UNKNOWN_MIMETYPE } from './payload-description';\nimport { BufferProperties } from './buffer-props';\n\n/**\n * Symbols are passed into sockets and thus processors to convey in-band\n * information on the stream of packets.\n */\nexport enum PacketSymbol {\n  VOID = 0,           // void: a placeholder\n  WAIT = 1,           // further data received should not be processed (or transferred)\n  WAIT_BUT_Q = 2,     // further data received may be processed but must be queued until transferred (wait for resume)\n  RESUME = 3,         // further data received should be processed now and pipelined\n  FLUSH = 4,          // data received before should now be flushed (meaning it should be transferred when already processed)\n  GAP = 5,            // a time-plane discontinuity in this sync-id domain will arrive after this (this may also mean a lack of data for present processing)\n  EOS = 6,            // no more data will be transferred after this\n  DROP = 7,           // data received before (already processed or not) should be dropped (and thus not transferred)\n  DROP_Q = 8,         // data received before that was queued (not yet processed) should be dropped\n  SYNC = 9            // after this, a new packet sync-id may appear (the symbolic packet SHOULD carry its value already)\n}\n\nexport type PacketReceiveCallback = ((p: Packet) => boolean);\n\nexport class Packet {\n\n  /**\n   * used to recover a packet that was transferred from a another thread (worker) context (passed via a message-event).\n   * the object is then a \"dead\" structure of metadata and needs to be reconstructed so it has \"methods\"\n   * again on its instance. all buffer-slices need to be recovered as well. in JS terms, we have lost all of our\n   * prototypical nature and are more of a 1-to-1 serialized snapshot of the object state from which we create\n   * a new instance with the identical properties.\n   * @param p\n   */\n  static fromTransferable (p: Packet): Packet {\n    return Packet.fromData(p, p.data.map((bs) => BufferSlice.fromTransferable(bs)));\n  }\n\n  /**\n   * same as above but we are creating copies of the buffer data as well.\n   * this is usually done when we pass data from a processing thread (worker) into the control/user thread via a message.\n   * the message is attached a copy of the original data which was processed in the thread in this case.\n   * @param p\n   */\n  static makeTransferableCopy(p: Packet) {\n    return Packet.fromData(p, p.data.map((bs) => BufferSlice.copy(bs)));\n  }\n\n  /**\n   * Creates a new packet based on an existing (\"dead\") packets metadata and some arbitrary data that is passed in.\n   * This is used to convert back and for packet-data to be attached to inter-thread messages.\n   * @param p Expected to be only a state snapshot of a packet without the actual prototype applied (no methods)\n   * @param data\n   */\n  private static fromData (p: Packet, data: BufferSlice[]) {\n\n    const newPacket: Packet = new Packet(\n      data,\n      p.timestamp,\n      p.presentationTimeOffset,\n      p.createdAt,\n      p.synchronizationId\n    );\n    if (p._symbol > 0) { // we need to access the private member here because the properties\n                         // and methods are not present when the prototype wasn't called\n                         // same for the methods below\n                         // note: if we would apply the constructor on `p` it would also reset the values\n      newPacket.symbol = p._symbol;\n    }\n    newPacket.setTimestampOffset(p._timestampOffset);\n    newPacket.setTimescale(p._timescale);\n    return newPacket;\n  }\n\n  static fromArrayBuffer (\n    arrayBuffer: ArrayBuffer,\n    mimeType?: string,\n    bufferProps: BufferProperties = new BufferProperties(mimeType)): Packet {\n\n    return Packet.fromSlice(new BufferSlice(\n      arrayBuffer,\n      0,\n      arrayBuffer.byteLength,\n      bufferProps\n    ));\n  }\n\n  static fromSlice (bufferSlice: BufferSlice, timestamp?: number, pto?: number): Packet {\n    const p = new Packet([], timestamp, pto);\n    p.data.push(\n      bufferSlice\n    );\n    return p;\n  }\n\n  static fromSlices(timestamp: number, pto: number, ...bufferSlices: BufferSlice[]): Packet {\n    const p = new Packet([], timestamp, pto);\n    Array.prototype.push.apply(p.data, bufferSlices);\n    return p;\n  }\n\n  static fromSymbol (symbol: PacketSymbol) {\n    const p = new Packet();\n    p.symbol = symbol;\n    return p;\n  }\n\n  static newEos () {\n    return Packet.fromSymbol(PacketSymbol.EOS);\n  }\n\n  static newFlush () {\n    return Packet.fromSymbol(PacketSymbol.FLUSH);\n  }\n\n  static newGap () {\n    return Packet.fromSymbol(PacketSymbol.GAP);\n  }\n\n  static newResume () {\n    return Packet.fromSymbol(PacketSymbol.RESUME);\n  }\n\n  private _symbol: PacketSymbol = PacketSymbol.VOID;\n  private _timescale: number = 1; // maybe not have a default value?\n  private _hasDefaultBufferProps: boolean = true;\n  private _timestampOffset: number = 0;\n\n  constructor (\n    public data: BufferSlices = [],\n    public timestamp: number = 0,\n    public presentationTimeOffset: number = 0,\n    public createdAt: Date = new Date(),\n    public readonly synchronizationId: number = null\n  ) {\n\n    if (synchronizationId !== null && !Number.isSafeInteger(synchronizationId)) {\n      throw new Error('Synchronization-id must be a safe integer value');\n    }\n\n  }\n\n  mapArrayBuffers (): ArrayBuffer[] {\n    return BufferSlice.mapArrayBuffers(this.data);\n  }\n\n  forEachBufferSlice (\n    method: (bs: BufferSlice) => void,\n    errorHandler: (bs: BufferSlice, err: Error) => boolean = null,\n    context: any = null) {\n    let abort = false;\n    // we use an on-stack shallow copy of the array to prevent any\n    // side-effects on other manipulation of the packet itself from within\n    // the loop we will run here.\n    this.data.slice().forEach((bufferSlice) => {\n      if (abort) {\n        return;\n      }\n      if (context) {\n        method = method.bind(context);\n        if (errorHandler) {\n          errorHandler = errorHandler.bind(context);\n        }\n      }\n      try {\n        method(bufferSlice);\n      } catch (err) {\n        if (errorHandler) {\n          if (!errorHandler(bufferSlice, err)) {\n            abort = true;\n            console.error('Packet-buffers loop aborted: ', err);\n          }\n        } else {\n          throw err;\n        }\n      }\n    });\n  }\n\n  get symbol (): PacketSymbol {\n    return this._symbol;\n  }\n\n  set symbol (symbol: PacketSymbol) {\n    if (this.data.length > 0) {\n      throw new Error('Symbolic packets should not carry data');\n    }\n    this._symbol = symbol;\n  }\n\n  // TODO: allow to inject default payload as well from the packet\n  get defaultPayloadInfo (): BufferProperties {\n    if (!this.hasDefaultPayloadInfo) {\n      throw new Error('packet has no default payload description');\n    }\n    return this.data[0] ? this.data[0].props : null;\n  }\n\n  // TODO: check if other buffers have other infos etc..\n  get hasDefaultPayloadInfo(): boolean {\n    return this._hasDefaultBufferProps;\n  }\n\n  /**\n   * alias for presentationTimeOffset\n   */\n  get cto() {\n    return this.presentationTimeOffset;\n  }\n\n  /**\n   * alias for presentationTimeOffset\n   */\n  get pto() {\n    return this.presentationTimeOffset;\n  }\n\n  /**\n   * alias for timestamp (caution: not including timestamp-offset)\n   */\n  get dts() {\n    return this.timestamp;\n  }\n\n  /**\n   * CT <==> PTS\n   *\n   * CT(n)  =  DT(n)  +  CTO(n)\n   */\n  getPresentationTimestamp (): number {\n    return this._timestampOffset + this.timestamp + this.presentationTimeOffset;\n  }\n\n  getDecodingTimestamp (): number {\n    return this._timestampOffset + this.timestamp;\n  }\n\n  setTimescale(timescale: number) {\n    this._timescale = timescale;\n  }\n\n  getTimescale(): number {\n    return this._timescale;\n  }\n\n  setTimestampOffset(tOffset: number) {\n    this._timestampOffset = tOffset;\n  }\n\n  getTimestampOffset(): number {\n    return this._timestampOffset;\n  }\n\n  /**\n   * CTO == PTO == presentationTimeOffset\n   */\n  getNormalizedCto(): number {\n    return this.presentationTimeOffset / this._timescale;\n  }\n\n  getNormalizedTimestampOffset(): number {\n    return this._timestampOffset / this._timescale;\n  }\n\n  getNormalizedPts(): number {\n    return this.getPresentationTimestamp() / this._timescale;\n  }\n\n  getNormalizedDts() {\n    return this.getDecodingTimestamp() / this._timescale;\n  }\n\n  getScaledPts(timescale: number): number {\n    return this.getNormalizedPts() * timescale;\n  }\n\n  getScaledDts(timescale: number): number {\n    return this.getNormalizedDts() * timescale;\n  }\n\n  /**\n   * CTO == PTO == presentationTimeOffset\n   */\n  getScaledCto(timescale): number {\n    return this.getNormalizedCto() * timescale;\n  }\n\n  getTotalBytes () {\n    return this.data.reduce((accu, buf: BufferSlice) => {\n      return accu + buf.length;\n    }, 0);\n  }\n\n  isSymbolic (): boolean {\n    return this._symbol !== PacketSymbol.VOID && this.data.length === 0;\n  }\n\n  toString(): string {\n    const p = this;\n    const description\n      = `<${p.defaultPayloadInfo ? p.defaultPayloadInfo.mimeType : UNKNOWN_MIMETYPE}>`\n      + ` #{(@${p.getTimestampOffset()} + ${p.timestamp} + ∂${p.presentationTimeOffset}) / ${p.getTimescale()}`\n      + ` -> ${p.getNormalizedDts()} + ∂${p.getNormalizedCto()} [s]} `\n    return description;\n  }\n\n  /*\n  isPayloadInfoConsistent(): boolean {\n    throw new Error('not implemented');\n  }\n  */\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/packet.ts","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/index.js\n// module id = 13\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 14\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base64-js/index.js\n// module id = 15\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ieee754/index.js\n// module id = 16\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isarray/index.js\n// module id = 17\n// module chunks = 0","/**\n * highly optimized TS demuxer:\n * parse PAT, PMT\n * extract PES packet from audio and video PIDs\n * extract AVC/H264 NAL units and AAC/ADTS samples from PES packet\n * trigger the remuxer upon parsing completion\n * it also tries to workaround as best as it can audio codec switch (HE-AAC to AAC and vice versa), without having to restart the MediaSource.\n * it also controls the remuxing process :\n * upon discontinuity or level switch detection, it will also notifies the remuxer so that it can reset its state.\n*/\n\nimport * as ADTS from './adts-utils';\nimport MpegAudio from './mpeg-audio-parser';\nimport ExpGolomb from './exp-golomb-reader';\nimport SampleAesDecrypter from './sample-aes-decrypter';\n\nimport { getLogger } from '../../logger';\n\n// import Hex from '../utils/hex';\n\nconst { log, warn, error } = getLogger('TSDemuxer');\n\n// We are using fixed track IDs for driving the MP4 remuxer\n// instead of following the TS PIDs.\n// There is no reason not to do this and some browsers/SourceBuffer-demuxers\n// may not like if there are TrackID \"switches\"\n// See https://github.com/video-dev/hls.js/issues/1331\n// Here we are mapping our internal track types to constant MP4 track IDs\n// With MSE currently one can only have one track of each, and we are muxing\n// whatever video/audio rendition in them.\nconst RemuxerTrackIdConfig = {\n  video: 1,\n  audio: 2,\n  id3: 3,\n  text: 4\n};\n\nexport type TSDemuxerConfig = {\n  forceKeyFrameOnDiscontinuity: boolean\n};\n\nexport type TSDemuxerCallback = (audioTrack, avcTrack, id3Track, txtTrack, timeOffset, contiguous, accurateTimeOffset) => {};\n\nexport class TSDemuxer {\n\n  static probe (data): boolean {\n    const syncOffset = TSDemuxer.findSyncOffset(data);\n    if (syncOffset < 0) {\n      return false;\n    } else {\n      if (syncOffset) {\n        warn(`MPEG2-TS detected but first sync word found @ offset ${syncOffset}, junk ahead ?`);\n      }\n\n      return true;\n    }\n  }\n\n  static findSyncOffset (data): number {\n    // scan 4096 first bytes\n    const scanwindow = Math.min(4096, data.length - 3 * 188);\n    let i = 0;\n    while (i < scanwindow) {\n      // a TS fragment should contain at least 3 TS packets, a PAT, a PMT, and one PID, each starting with 0x47\n      if (data[i] === 0x47 && data[i + 188] === 0x47 && data[i + 2 * 188] === 0x47) {\n        if (i > 0) {\n          log('sync-offset at:', i)\n        }\n        return i;\n      } else {\n        i++;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Creates a track model internal to demuxer used to drive remuxing input\n   *\n  {string} type 'audio' | 'video' | 'id3' | 'text'\n  {number} duration\n  {object} TSDemuxer's internal track model\n   */\n  private static _createTrack (type, duration) {\n    return {\n      container: type === 'video' || type === 'audio' ? 'video/mp2t' : undefined,\n      type,\n      id: RemuxerTrackIdConfig[type],\n      pid: -1,\n      inputTimeScale: 90000,\n      sequenceNumber: 0,\n      samples: [],\n      len: 0,\n      dropped: type === 'video' ? 0 : undefined,\n      isAAC: type === 'audio' ? true : undefined,\n      duration: type === 'audio' ? duration : undefined\n    };\n  }\n\n  config: any;\n  typeSupported: {mpeg: boolean, mp3: boolean};\n  onDemux: TSDemuxerCallback;\n  sampleAes: any;\n  observer: any;\n  pmtParsed: boolean;\n  _pmtId: number;\n  _avcTrack: any;\n  _audioTrack: any;\n  _id3Track: any;\n  _txtTrack: any;\n  aacOverFlow: any;\n  aacLastPTS: any;\n  avcSample: any;\n  _duration: any;\n  contiguous: any;\n  _initPTS: any;\n  _initDTS: any;\n\n  constructor (onDemux: TSDemuxerCallback, config: Partial<TSDemuxerConfig> = {}, typeSupported: {mpeg: boolean, mp3: boolean} = { mpeg: true, mp3: true }) {\n    this.config = config;\n    this.typeSupported = typeSupported;\n    this.onDemux = onDemux;\n    this.sampleAes = null;\n  }\n\n  setDecryptionInfo (decryptdata) {\n    if ((decryptdata != null) && (decryptdata.key != null) && (decryptdata.method === 'SAMPLE-AES')) {\n      this.sampleAes = new SampleAesDecrypter(this.observer, this.config, decryptdata, this.discardEPB);\n    } else {\n      this.sampleAes = null;\n    }\n  }\n\n  /**\n   * Initializes a new init segment on the demuxer. Needed for discontinuities/track-switches (or at stream start)\n   * Resets all internal track instances of the demuxer.\n   *\n  {string} audioCodec\n  {string} videoCodec\n  {number} duration (in TS timescale = 90kHz)\n   */\n  reset (duration: number = 0) {\n    this.pmtParsed = false;\n    this._pmtId = -1;\n\n    this._avcTrack = TSDemuxer._createTrack('video', duration);\n    this._audioTrack = TSDemuxer._createTrack('audio', duration);\n    this._id3Track = TSDemuxer._createTrack('id3', duration);\n    this._txtTrack = TSDemuxer._createTrack('text', duration);\n\n    // flush any partial content\n    this.aacOverFlow = null;\n    this.aacLastPTS = null;\n    this.avcSample = null;\n    this._duration = duration;\n  }\n\n  // feed incoming data to the front of the parsing pipeline\n  append (data, timeOffset, contiguous, accurateTimeOffset) {\n\n    let start = 0;\n    let len = data.length;\n    let stt;\n    let pid;\n    let atf;\n    let offset;\n    let pes;\n\n    let unknownPIDs = false;\n    let pmtParsed = this.pmtParsed;\n\n    let avcTrack = this._avcTrack;\n    let audioTrack = this._audioTrack;\n    let id3Track = this._id3Track;\n\n    let avcId = avcTrack.pid;\n    let audioId = audioTrack.pid;\n    let id3Id = id3Track.pid;\n    let pmtId = this._pmtId;\n\n    let avcData = avcTrack.pesData;\n    let audioData = audioTrack.pesData;\n    let id3Data = id3Track.pesData;\n\n    let parsePAT = this._parsePAT;\n    let parsePMT = this._parsePMT;\n    let parsePES = this._parsePES;\n    let parseAVCPES = this._parseAVCPES.bind(this);\n    let parseAACPES = this._parseAACPES.bind(this);\n    let parseMPEGPES = this._parseMPEGPES.bind(this);\n    let parseID3PES = this._parseID3PES.bind(this);\n\n    this.contiguous = contiguous;\n\n    const syncOffset = TSDemuxer.findSyncOffset(data);\n\n    if (syncOffset < 0) {\n      throw new Error('No ts-packet found in stream');\n    }\n\n    // don't parse last TS packet if incomplete\n    len -= (len + syncOffset) % 188;\n\n    // loop through TS packets\n    for (start = syncOffset; start < len; start += 188) {\n\n      if (data[start] !== 0x47) { // try to skip until next sync-byte\n        for (let i = start; i < len; i++) {\n          if (data[i] === 0x47) {\n            warn(`Skipped ${i - start} bytes in stream to find next TS package`);\n            start = i;\n            break;\n          }\n        }\n      }\n\n      stt = !!(data[start + 1] & 0x40);\n      // pid is a 13-bit field starting at the last bit of TS[1]\n      pid = ((data[start + 1] & 0x1f) << 8) + data[start + 2];\n      atf = (data[start + 3] & 0x30) >> 4;\n      // if an adaption field is present, its length is specified by the fifth byte of the TS packet header.\n      if (atf > 1) {\n        offset = start + 5 + data[start + 4];\n        // continue if there is only adaptation field\n        if (offset === (start + 188)) {\n          continue;\n        }\n      } else {\n        offset = start + 4;\n      }\n      switch (pid) {\n      case avcId:\n        if (stt) {\n          if (avcData && (pes = parsePES(avcData)) && pes.pts !== undefined) {\n            parseAVCPES(pes, false);\n          }\n\n          avcData = { data: [], size: 0 };\n        }\n        if (avcData) {\n          avcData.data.push(data.subarray(offset, start + 188));\n          avcData.size += start + 188 - offset;\n        }\n        break;\n      case audioId:\n        if (stt) {\n          if (audioData && (pes = parsePES(audioData)) && pes.pts !== undefined) {\n            if (audioTrack.isAAC) {\n              parseAACPES(pes);\n            } else {\n              parseMPEGPES(pes);\n            }\n          }\n          audioData = { data: [], size: 0 };\n        }\n        if (audioData) {\n          audioData.data.push(data.subarray(offset, start + 188));\n          audioData.size += start + 188 - offset;\n        }\n        break;\n      case id3Id:\n        if (stt) {\n          if (id3Data && (pes = parsePES(id3Data)) && pes.pts !== undefined) {\n            parseID3PES(pes);\n          }\n\n          id3Data = { data: [], size: 0 };\n        }\n        if (id3Data) {\n          id3Data.data.push(data.subarray(offset, start + 188));\n          id3Data.size += start + 188 - offset;\n        }\n        break;\n      case 0:\n        if (stt) {\n          offset += data[offset] + 1;\n        }\n\n        pmtId = this._pmtId = parsePAT(data, offset);\n        break;\n      case pmtId:\n        if (stt) {\n          offset += data[offset] + 1;\n        }\n\n        let parsedPIDs = parsePMT(data, offset, this.typeSupported.mpeg || this.typeSupported.mp3, this.sampleAes != null);\n\n        // only update track id if track PID found while parsing PMT\n        // this is to avoid resetting the PID to -1 in case\n        // track PID transiently disappears from the stream\n        // this could happen in case of transient missing audio samples for example\n        // NOTE this is only the PID of the track as found in TS,\n        // but we are not using this for MP4 track IDs.\n        avcId = parsedPIDs.avc;\n        if (avcId > 0) {\n          avcTrack.pid = avcId;\n        }\n\n        audioId = parsedPIDs.audio;\n        if (audioId > 0) {\n          audioTrack.pid = audioId;\n          audioTrack.isAAC = parsedPIDs.isAAC;\n        }\n        id3Id = parsedPIDs.id3;\n        if (id3Id > 0) {\n          id3Track.pid = id3Id;\n        }\n\n        if (unknownPIDs && !pmtParsed) {\n          log('reparse from beginning');\n          unknownPIDs = false;\n          // we set it to -188, the += 188 in the for loop will reset start to 0\n          start = syncOffset - 188;\n        }\n        pmtParsed = this.pmtParsed = true;\n        break;\n      case 17:\n      case 0x1fff:\n        break;\n      default:\n        unknownPIDs = true;\n        break;\n      }\n    }\n    // try to parse last PES packets\n    if (avcData && (pes = parsePES(avcData)) && pes.pts !== undefined) {\n      parseAVCPES(pes, true);\n      avcTrack.pesData = null;\n    } else {\n      // either avcData null or PES truncated, keep it for next frag parsing\n      avcTrack.pesData = avcData;\n    }\n\n    if (audioData && (pes = parsePES(audioData)) && pes.pts !== undefined) {\n      if (audioTrack.isAAC) {\n        parseAACPES(pes);\n      } else {\n        parseMPEGPES(pes);\n      }\n\n      audioTrack.pesData = null;\n    } else {\n      if (audioData && audioData.size) {\n        log('last AAC PES packet truncated,might overlap between fragments');\n      }\n\n      // either audioData null or PES truncated, keep it for next frag parsing\n      audioTrack.pesData = audioData;\n    }\n\n    if (id3Data && (pes = parsePES(id3Data)) && pes.pts !== undefined) {\n      parseID3PES(pes);\n      id3Track.pesData = null;\n    } else {\n      // either id3Data null or PES truncated, keep it for next frag parsing\n      id3Track.pesData = id3Data;\n    }\n\n    if (this.sampleAes == null) {\n      this.onDemux(audioTrack, avcTrack, id3Track, this._txtTrack, timeOffset, contiguous, accurateTimeOffset);\n    } else {\n      this.decryptAndRemux(audioTrack, avcTrack, id3Track, this._txtTrack, timeOffset, contiguous, accurateTimeOffset);\n    }\n  }\n\n  decryptAndRemux (audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset) {\n    if (audioTrack.samples && audioTrack.isAAC) {\n      this.sampleAes.decryptAacSamples(audioTrack.samples, 0, function () {\n        this.decryptAndRemuxAvc(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset);\n      }.bind(this));\n    } else {\n      this.decryptAndRemuxAvc(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset);\n    }\n  }\n\n  decryptAndRemuxAvc (audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset) {\n    if (videoTrack.samples) {\n      this.sampleAes.decryptAvcSamples(videoTrack.samples, 0, 0, function () {\n        this.onDemux(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset);\n      }.bind(this));\n    } else {\n      this.onDemux(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset);\n    }\n  }\n\n  destroy () {\n    this._initPTS = this._initDTS = undefined;\n    this._duration = 0;\n  }\n\n  _parsePAT (data, offset) {\n    // skip the PSI header and parse the first PMT entry\n    return (data[offset + 10] & 0x1F) << 8 | data[offset + 11];\n    // log('PMT PID:'  + this._pmtId);\n  }\n\n  _parsePMT (data, offset, mpegSupported, isSampleAes) {\n    let sectionLength; let tableEnd; let programInfoLength; let pid; let result = { audio: -1, avc: -1, id3: -1, isAAC: true };\n    sectionLength = (data[offset + 1] & 0x0f) << 8 | data[offset + 2];\n    tableEnd = offset + 3 + sectionLength - 4;\n    // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n    programInfoLength = (data[offset + 10] & 0x0f) << 8 | data[offset + 11];\n    // advance the offset to the first entry in the mapping table\n    offset += 12 + programInfoLength;\n    while (offset < tableEnd) {\n      pid = (data[offset + 1] & 0x1F) << 8 | data[offset + 2];\n      switch (data[offset]) {\n      case 0xcf: // SAMPLE-AES AAC\n        if (!isSampleAes) {\n          log('unkown stream type:' + data[offset]);\n          break;\n        }\n        /* falls through */\n\n        // ISO/IEC 13818-7 ADTS AAC (MPEG-2 lower bit-rate audio)\n      case 0x0f:\n        // log('AAC PID:'  + pid);\n        if (result.audio === -1) {\n          result.audio = pid;\n        }\n\n        break;\n\n        // Packetized metadata (ID3)\n      case 0x15:\n        // log('ID3 PID:'  + pid);\n        if (result.id3 === -1) {\n          result.id3 = pid;\n        }\n\n        break;\n\n      case 0xdb: // SAMPLE-AES AVC\n        if (!isSampleAes) {\n          log('unkown stream type:' + data[offset]);\n          break;\n        }\n        /* falls through */\n\n        // ITU-T Rec. H.264 and ISO/IEC 14496-10 (lower bit-rate video)\n      case 0x1b:\n        // log('AVC PID:'  + pid);\n        if (result.avc === -1) {\n          result.avc = pid;\n        }\n\n        break;\n\n        // ISO/IEC 11172-3 (MPEG-1 audio)\n        // or ISO/IEC 13818-3 (MPEG-2 halved sample rate audio)\n      case 0x03:\n      case 0x04:\n        // log('MPEG PID:'  + pid);\n        if (!mpegSupported) {\n          log('MPEG audio found, not supported in this browser for now');\n        } else if (result.audio === -1) {\n          result.audio = pid;\n          result.isAAC = false;\n        }\n        break;\n\n      case 0x24:\n        warn('HEVC stream type found, not supported for now');\n        break;\n\n      default:\n        log('unkown stream type:' + data[offset]);\n        break;\n      }\n      // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n      offset += ((data[offset + 3] & 0x0F) << 8 | data[offset + 4]) + 5;\n    }\n    return result;\n  }\n\n  _parsePES (stream) {\n    let i = 0; let frag; let pesFlags; let pesPrefix; let pesLen; let pesHdrLen; let pesData; let pesPts; let pesDts; let payloadStartOffset; let data = stream.data;\n    // safety check\n    if (!stream || stream.size === 0) {\n      return null;\n    }\n\n    // we might need up to 19 bytes to read PES header\n    // if first chunk of data is less than 19 bytes, let's merge it with following ones until we get 19 bytes\n    // usually only one merge is needed (and this is rare ...)\n    while (data[0].length < 19 && data.length > 1) {\n      let newData = new Uint8Array(data[0].length + data[1].length);\n      newData.set(data[0]);\n      newData.set(data[1], data[0].length);\n      data[0] = newData;\n      data.splice(1, 1);\n    }\n    // retrieve PTS/DTS from first fragment\n    frag = data[0];\n    pesPrefix = (frag[0] << 16) + (frag[1] << 8) + frag[2];\n    if (pesPrefix === 1) {\n      pesLen = (frag[4] << 8) + frag[5];\n      // if PES parsed length is not zero and greater than total received length, stop parsing. PES might be truncated\n      // minus 6 : PES header size\n      if (pesLen && pesLen > stream.size - 6) {\n        return null;\n      }\n\n      pesFlags = frag[7];\n      if (pesFlags & 0xC0) {\n        /* PES header described here : http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n            as PTS / DTS is 33 bit we cannot use bitwise operator in JS,\n            as Bitwise operators treat their operands as a sequence of 32 bits */\n        pesPts = (frag[9] & 0x0E) * 536870912 +// 1 << 29\n          (frag[10] & 0xFF) * 4194304 +// 1 << 22\n          (frag[11] & 0xFE) * 16384 +// 1 << 14\n          (frag[12] & 0xFF) * 128 +// 1 << 7\n          (frag[13] & 0xFE) / 2;\n        // check if greater than 2^32 -1\n        if (pesPts > 4294967295) {\n          // decrement 2^33\n          pesPts -= 8589934592;\n        }\n        if (pesFlags & 0x40) {\n          pesDts = (frag[14] & 0x0E) * 536870912 +// 1 << 29\n            (frag[15] & 0xFF) * 4194304 +// 1 << 22\n            (frag[16] & 0xFE) * 16384 +// 1 << 14\n            (frag[17] & 0xFF) * 128 +// 1 << 7\n            (frag[18] & 0xFE) / 2;\n          // check if greater than 2^32 -1\n          if (pesDts > 4294967295) {\n            // decrement 2^33\n            pesDts -= 8589934592;\n          }\n          if (pesPts - pesDts > 60 * 90000) {\n            warn(`${Math.round((pesPts - pesDts) / 90000)}s delta between PTS and DTS, align them`);\n            pesPts = pesDts;\n          }\n        } else {\n          pesDts = pesPts;\n        }\n      }\n      pesHdrLen = frag[8];\n      // 9 bytes : 6 bytes for PES header + 3 bytes for PES extension\n      payloadStartOffset = pesHdrLen + 9;\n\n      stream.size -= payloadStartOffset;\n      // reassemble PES packet\n      pesData = new Uint8Array(stream.size);\n      for (let j = 0, dataLen = data.length; j < dataLen; j++) {\n        frag = data[j];\n        let len = frag.byteLength;\n        if (payloadStartOffset) {\n          if (payloadStartOffset > len) {\n            // trim full frag if PES header bigger than frag\n            payloadStartOffset -= len;\n            continue;\n          } else {\n            // trim partial frag if PES header smaller than frag\n            frag = frag.subarray(payloadStartOffset);\n            len -= payloadStartOffset;\n            payloadStartOffset = 0;\n          }\n        }\n        pesData.set(frag, i);\n        i += len;\n      }\n      if (pesLen) {\n        // payload size : remove PES header + PES extension\n        pesLen -= pesHdrLen + 3;\n      }\n      return { data: pesData, pts: pesPts, dts: pesDts, len: pesLen };\n    } else {\n      return null;\n    }\n  }\n\n  pushAccesUnit (avcSample, avcTrack) {\n    if (avcSample.units.length && avcSample.frame) {\n      const samples = avcTrack.samples;\n      const nbSamples = samples.length;\n      // only push AVC sample if starting with a keyframe is not mandatory OR\n      //    if keyframe already found in this fragment OR\n      //       keyframe found in last fragment (track.sps) AND\n      //          samples already appended (we already found a keyframe in this fragment) OR fragment is contiguous\n      if (!this.config.forceKeyFrameOnDiscontinuity ||\n          avcSample.key === true ||\n          (avcTrack.sps && (nbSamples || this.contiguous))) {\n        avcSample.id = nbSamples;\n        samples.push(avcSample);\n      } else {\n        // dropped samples, track it\n        avcTrack.dropped++;\n      }\n    }\n    if (avcSample.debug.length) {\n      log(avcSample.pts + '/' + avcSample.dts + ':' + avcSample.debug);\n    }\n  }\n\n  _parseAVCPES (pes, last) {\n\n    const debug = false;\n\n    // log('parse new PES');\n    let track = this._avcTrack;\n\n    let units = this._parseAVCNALu(pes.data);\n\n    let expGolombDecoder;\n\n    let avcSample = this.avcSample;\n\n    let push;\n\n    let spsfound = false;\n\n    let i;\n\n    let pushAccesUnit = this.pushAccesUnit.bind(this);\n\n    let createAVCSample = function (key, pts, dts, debug) {\n      return { key, pts, dts, units: [], debug };\n    };\n    // free pes.data to save up some memory\n    pes.data = null;\n\n    // if new NAL units found and last sample still there, let's push ...\n    // this helps parsing streams with missing AUD (only do this if AUD never found)\n    if (avcSample && units.length && !track.audFound) {\n      pushAccesUnit(avcSample, track);\n      avcSample = this.avcSample = createAVCSample(false, pes.pts, pes.dts, '');\n    }\n\n    units.forEach((unit) => {\n      switch (unit.type) {\n      // NDR\n      case 1:\n        push = true;\n        if (!avcSample) {\n          avcSample = this.avcSample = createAVCSample(true, pes.pts, pes.dts, '');\n        }\n\n        if (debug) {\n          avcSample.debug += 'NDR ';\n        }\n\n        avcSample.frame = true;\n        let data = unit.data;\n        // only check slice type to detect KF in case SPS found in same packet (any keyframe is preceded by SPS ...)\n        if (spsfound && data.length > 4) {\n          // retrieve slice type by parsing beginning of NAL unit (follow H264 spec, slice_header definition) to detect keyframe embedded in NDR\n          let sliceType = new ExpGolomb(data).readSliceType();\n          // 2 : I slice, 4 : SI slice, 7 : I slice, 9: SI slice\n          // SI slice : A slice that is coded using intra prediction only and using quantisation of the prediction samples.\n          // An SI slice can be coded such that its decoded samples can be constructed identically to an SP slice.\n          // I slice: A slice that is not an SI slice that is decoded using intra prediction only.\n          // if (sliceType === 2 || sliceType === 7) {\n          if (sliceType === 2 || sliceType === 4 || sliceType === 7 || sliceType === 9) {\n            avcSample.key = true;\n          }\n        }\n        break;\n        // IDR\n      case 5:\n        push = true;\n        // handle PES not starting with AUD\n        if (!avcSample) {\n          avcSample = this.avcSample = createAVCSample(true, pes.pts, pes.dts, '');\n        }\n\n        if (debug) {\n          avcSample.debug += 'IDR ';\n        }\n\n        avcSample.key = true;\n        avcSample.frame = true;\n        break;\n        // SEI\n      case 6:\n        push = true;\n        if (debug && avcSample) {\n          avcSample.debug += 'SEI ';\n        }\n\n        expGolombDecoder = new ExpGolomb(this.discardEPB(unit.data));\n\n        // skip frameType\n        expGolombDecoder.readUByte();\n\n        let payloadType = 0;\n        let payloadSize = 0;\n        let endOfCaptions = false;\n        let b = 0;\n\n        while (!endOfCaptions && expGolombDecoder.bytesAvailable > 1) {\n          payloadType = 0;\n          do {\n            b = expGolombDecoder.readUByte();\n            payloadType += b;\n          } while (b === 0xFF);\n\n          // Parse payload size.\n          payloadSize = 0;\n          do {\n            b = expGolombDecoder.readUByte();\n            payloadSize += b;\n          } while (b === 0xFF);\n\n          // TODO: there can be more than one payload in an SEI packet...\n          // TODO: need to read type and size in a while loop to get them all\n          if (payloadType === 4 && expGolombDecoder.bytesAvailable !== 0) {\n            endOfCaptions = true;\n\n            let countryCode = expGolombDecoder.readUByte();\n\n            if (countryCode === 181) {\n              let providerCode = expGolombDecoder.readUShort();\n\n              if (providerCode === 49) {\n                let userStructure = expGolombDecoder.readUInt();\n\n                if (userStructure === 0x47413934) {\n                  let userDataType = expGolombDecoder.readUByte();\n\n                  // Raw CEA-608 bytes wrapped in CEA-708 packet\n                  if (userDataType === 3) {\n                    let firstByte = expGolombDecoder.readUByte();\n                    let secondByte = expGolombDecoder.readUByte();\n\n                    let totalCCs = 31 & firstByte;\n                    let byteArray = [firstByte, secondByte];\n\n                    for (i = 0; i < totalCCs; i++) {\n                      // 3 bytes per CC\n                      byteArray.push(expGolombDecoder.readUByte());\n                      byteArray.push(expGolombDecoder.readUByte());\n                      byteArray.push(expGolombDecoder.readUByte());\n                    }\n\n                    this._insertSampleInOrder(this._txtTrack.samples, { type: 3, pts: pes.pts, bytes: byteArray });\n                  }\n                }\n              }\n            }\n          } else if (payloadSize < expGolombDecoder.bytesAvailable) {\n            for (i = 0; i < payloadSize; i++) {\n              expGolombDecoder.readUByte();\n            }\n          }\n        }\n        break;\n        // SPS\n      case 7:\n        push = true;\n        spsfound = true;\n        if (debug && avcSample) {\n          avcSample.debug += 'SPS ';\n        }\n\n        if (!track.sps) {\n          expGolombDecoder = new ExpGolomb(unit.data);\n          let config = expGolombDecoder.readSPS();\n          track.width = config.width;\n          track.height = config.height;\n          track.pixelRatio = config.pixelRatio;\n          track.sps = [unit.data];\n          track.duration = this._duration;\n          let codecarray = unit.data.subarray(1, 4);\n          let codecstring = 'avc1.';\n          for (i = 0; i < 3; i++) {\n            let h = codecarray[i].toString(16);\n            if (h.length < 2) {\n              h = '0' + h;\n            }\n\n            codecstring += h;\n          }\n          track.codec = codecstring;\n        }\n        break;\n        // PPS\n      case 8:\n        push = true;\n        if (debug && avcSample) {\n          avcSample.debug += 'PPS ';\n        }\n\n        if (!track.pps) {\n          track.pps = [unit.data];\n        }\n\n        break;\n        // AUD\n      case 9:\n        push = false;\n        track.audFound = true;\n        if (avcSample) {\n          pushAccesUnit(avcSample, track);\n        }\n\n        avcSample = this.avcSample = createAVCSample(false, pes.pts, pes.dts, debug ? 'AUD ' : '');\n        break;\n        // Filler Data\n      case 12:\n        push = false;\n        break;\n      default:\n        push = false;\n        if (avcSample) {\n          avcSample.debug += 'unknown NAL ' + unit.type + ' ';\n        }\n\n        break;\n      }\n      if (avcSample && push) {\n        let units = avcSample.units;\n        units.push(unit);\n      }\n    });\n    // if last PES packet, push samples\n    if (last && avcSample) {\n      pushAccesUnit(avcSample, track);\n      this.avcSample = null;\n    }\n  }\n\n  _insertSampleInOrder (arr, data) {\n    let len = arr.length;\n    if (len > 0) {\n      if (data.pts >= arr[len - 1].pts) {\n        arr.push(data);\n      } else {\n        for (let pos = len - 1; pos >= 0; pos--) {\n          if (data.pts < arr[pos].pts) {\n            arr.splice(pos, 0, data);\n            break;\n          }\n        }\n      }\n    } else {\n      arr.push(data);\n    }\n  }\n\n  _getLastNalUnit () {\n    let avcSample = this.avcSample; let lastUnit;\n    // try to fallback to previous sample if current one is empty\n    if (!avcSample || avcSample.units.length === 0) {\n      let track = this._avcTrack; let samples = track.samples;\n      avcSample = samples[samples.length - 1];\n    }\n    if (avcSample) {\n      let units = avcSample.units;\n      lastUnit = units[units.length - 1];\n    }\n    return lastUnit;\n  }\n\n  _parseAVCNALu (array) {\n    let i = 0; let len = array.byteLength; let value; let overflow; let track = this._avcTrack; let state = track.naluState || 0; let lastState = state;\n    let units = []; let unit; let unitType; let lastUnitStart = -1; let lastUnitType;\n    // log('PES:' + Hex.hexDump(array));\n\n    if (state === -1) {\n    // special use case where we found 3 or 4-byte start codes exactly at the end of previous PES packet\n      lastUnitStart = 0;\n      // NALu type is value read from offset 0\n      lastUnitType = array[0] & 0x1f;\n      state = 0;\n      i = 1;\n    }\n\n    while (i < len) {\n      value = array[i++];\n      // optimization. state 0 and 1 are the predominant case. let's handle them outside of the switch/case\n      if (!state) {\n        state = value ? 0 : 1;\n        continue;\n      }\n      if (state === 1) {\n        state = value ? 0 : 2;\n        continue;\n      }\n      // here we have state either equal to 2 or 3\n      if (!value) {\n        state = 3;\n      } else if (value === 1) {\n        if (lastUnitStart >= 0) {\n          unit = { data: array.subarray(lastUnitStart, i - state - 1), type: lastUnitType };\n          // log('pushing NALU, type/size:' + unit.type + '/' + unit.data.byteLength);\n          units.push(unit);\n        } else {\n          // lastUnitStart is undefined => this is the first start code found in this PES packet\n          // first check if start code delimiter is overlapping between 2 PES packets,\n          // ie it started in last packet (lastState not zero)\n          // and ended at the beginning of this PES packet (i <= 4 - lastState)\n          let lastUnit = this._getLastNalUnit();\n          if (lastUnit) {\n            if (lastState && (i <= 4 - lastState)) {\n              // start delimiter overlapping between PES packets\n              // strip start delimiter bytes from the end of last NAL unit\n              // check if lastUnit had a state different from zero\n              if (lastUnit.state) {\n                // strip last bytes\n                lastUnit.data = lastUnit.data.subarray(0, lastUnit.data.byteLength - lastState);\n              }\n            }\n            // If NAL units are not starting right at the beginning of the PES packet, push preceding data into previous NAL unit.\n            overflow = i - state - 1;\n            if (overflow > 0) {\n              // log('first NALU found with overflow:' + overflow);\n              let tmp = new Uint8Array(lastUnit.data.byteLength + overflow);\n              tmp.set(lastUnit.data, 0);\n              tmp.set(array.subarray(0, overflow), lastUnit.data.byteLength);\n              lastUnit.data = tmp;\n            }\n          }\n        }\n        // check if we can read unit type\n        if (i < len) {\n          unitType = array[i] & 0x1f;\n          // log('find NALU @ offset:' + i + ',type:' + unitType);\n          lastUnitStart = i;\n          lastUnitType = unitType;\n          state = 0;\n        } else {\n          // not enough byte to read unit type. let's read it on next PES parsing\n          state = -1;\n        }\n      } else {\n        state = 0;\n      }\n    }\n    if (lastUnitStart >= 0 && state >= 0) {\n      unit = { data: array.subarray(lastUnitStart, len), type: lastUnitType, state };\n      units.push(unit);\n      // log('pushing NALU, type/size/state:' + unit.type + '/' + unit.data.byteLength + '/' + state);\n    }\n    // no NALu found\n    if (units.length === 0) {\n      // append pes.data to previous NAL unit\n      let lastUnit = this._getLastNalUnit();\n      if (lastUnit) {\n        let tmp = new Uint8Array(lastUnit.data.byteLength + array.byteLength);\n        tmp.set(lastUnit.data, 0);\n        tmp.set(array, lastUnit.data.byteLength);\n        lastUnit.data = tmp;\n      }\n    }\n    track.naluState = state;\n    return units;\n  }\n\n  /**\n   * remove Emulation Prevention bytes from a RBSP\n   */\n  discardEPB (data) {\n    let length = data.byteLength;\n\n    let EPBPositions = [];\n\n    let i = 1;\n\n    let newLength; let newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 &&\n          data[i + 1] === 0 &&\n          data[i + 2] === 0x03) {\n        EPBPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (EPBPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - EPBPositions.length;\n    newData = new Uint8Array(newLength);\n    let sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === EPBPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        EPBPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n    return newData;\n  }\n\n  _parseAACPES (pes) {\n    let track = this._audioTrack;\n\n    let data = pes.data;\n\n    let pts = pes.pts;\n\n    let startOffset = 0;\n\n    let aacOverFlow = this.aacOverFlow;\n\n    let aacLastPTS = this.aacLastPTS;\n\n    let frameDuration; let frameIndex; let offset; let stamp; let len;\n    if (aacOverFlow) {\n      let tmp = new Uint8Array(aacOverFlow.byteLength + data.byteLength);\n      tmp.set(aacOverFlow, 0);\n      tmp.set(data, aacOverFlow.byteLength);\n      // log(`AAC: append overflowing ${aacOverFlow.byteLength} bytes to beginning of new PES`);\n      data = tmp;\n    }\n    // look for ADTS header (0xFFFx)\n    for (offset = startOffset, len = data.length; offset < len - 1; offset++) {\n      if (ADTS.isHeader(data, offset)) {\n        break;\n      }\n    }\n    // if ADTS header does not start straight from the beginning of the PES payload, raise an error\n    if (offset) {\n      let reason; let fatal;\n      if (offset < len - 1) {\n        reason = `AAC PES did not start with ADTS header,offset:${offset}`;\n        fatal = false;\n      } else {\n        reason = 'no ADTS header found in AAC PES';\n        fatal = true;\n      }\n      warn(`parsing error:${reason}`);\n      error({ fatal, reason });\n      if (fatal) {\n        return;\n      }\n    }\n\n    ADTS.initTrackConfig(track, data, offset, null); // FIXME: pass in known audio codec info (mimetype + details) here\n    frameIndex = 0;\n    frameDuration = ADTS.getFrameDuration(track.samplerate);\n\n    // if last AAC frame is overflowing, we should ensure timestamps are contiguous:\n    // first sample PTS should be equal to last sample PTS + frameDuration\n    if (aacOverFlow && aacLastPTS) {\n      let newPTS = aacLastPTS + frameDuration;\n      if (Math.abs(newPTS - pts) > 1) {\n        log(`AAC: align PTS for overlapping frames by ${Math.round((newPTS - pts) / 90)}`);\n        pts = newPTS;\n      }\n    }\n\n    // scan for aac samples\n    while (offset < len) {\n      if (ADTS.isHeader(data, offset) && (offset + 5) < len) {\n        let frame = ADTS.appendFrame(track, data, offset, pts, frameIndex);\n        if (frame) {\n          // log(`${Math.round(frame.sample.pts)} : AAC`);\n          offset += frame.length;\n          stamp = frame.sample.pts;\n          frameIndex++;\n        } else {\n          // log('Unable to parse AAC frame');\n          break;\n        }\n      } else {\n        // nothing found, keep looking\n        offset++;\n      }\n    }\n\n    if (offset < len) {\n      aacOverFlow = data.subarray(offset, len);\n      // log(`AAC: overflow detected:${len-offset}`);\n    } else {\n      aacOverFlow = null;\n    }\n\n    this.aacOverFlow = aacOverFlow;\n    this.aacLastPTS = stamp;\n  }\n\n  _parseMPEGPES (pes) {\n    let data = pes.data;\n    let length = data.length;\n    let frameIndex = 0;\n    let offset = 0;\n    let pts = pes.pts;\n\n    while (offset < length) {\n      if (MpegAudio.isHeader(data, offset)) {\n        let frame = MpegAudio.appendFrame(this._audioTrack, data, offset, pts, frameIndex);\n        if (frame) {\n          offset += frame.length;\n          frameIndex++;\n        } else {\n          // log('Unable to parse Mpeg audio frame');\n          break;\n        }\n      } else {\n        // nothing found, keep looking\n        offset++;\n      }\n    }\n  }\n\n  _parseID3PES (pes) {\n    this._id3Track.samples.push(pes);\n  }\n}\n\nexport default TSDemuxer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/processors/hlsjs-ts-demux/ts-demuxer.ts","/**\n *  ADTS parser helper\n */\n\nexport function getAudioConfig (data, offset, audioCodec) {\n  let adtsObjectType;\n  // :int\n\n  let adtsSampleingIndex;\n  // :int\n\n  let adtsExtensionSampleingIndex;\n  // :int\n\n  let adtsChanelConfig;\n  // :int\n\n  let config;\n\n  let userAgent = navigator.userAgent.toLowerCase();\n\n  let manifestCodec = audioCodec;\n\n  let adtsSampleingRates = [\n    96000, 88200,\n    64000, 48000,\n    44100, 32000,\n    24000, 22050,\n    16000, 12000,\n    11025, 8000,\n    7350];\n  // byte 2\n  adtsObjectType = ((data[offset + 2] & 0xC0) >>> 6) + 1;\n  adtsSampleingIndex = ((data[offset + 2] & 0x3C) >>> 2);\n  if (adtsSampleingIndex > adtsSampleingRates.length - 1) {\n    // observer.trigger(Event.ERROR, { type: ErrorType.MEDIA_ERROR, details: ErrorDetail.FRAG_PARSING_ERROR, fatal: true, reason: `invalid ADTS sampling index:${adtsSampleingIndex}` });\n    console.error('Error in ADTS data');\n    return;\n  }\n  adtsChanelConfig = ((data[offset + 2] & 0x01) << 2);\n  // byte 3\n  adtsChanelConfig |= ((data[offset + 3] & 0xC0) >>> 6);\n  // logger.log(`manifest codec:${audioCodec},ADTS data:type:${adtsObjectType},sampleingIndex:${adtsSampleingIndex}[${adtsSampleingRates[adtsSampleingIndex]}Hz],channelConfig:${adtsChanelConfig}`);\n  // firefox: freq less than 24kHz = AAC SBR (HE-AAC)\n  if (/firefox/i.test(userAgent)) {\n    if (adtsSampleingIndex >= 6) {\n      adtsObjectType = 5;\n      config = new Array(4);\n      // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\n      // there is a factor 2 between frame sample rate and output sample rate\n      // multiply frequency by 2 (see table below, equivalent to substract 3)\n      adtsExtensionSampleingIndex = adtsSampleingIndex - 3;\n    } else {\n      adtsObjectType = 2;\n      config = new Array(2);\n      adtsExtensionSampleingIndex = adtsSampleingIndex;\n    }\n    // Android : always use AAC\n  } else if (userAgent.indexOf('android') !== -1) {\n    adtsObjectType = 2;\n    config = new Array(2);\n    adtsExtensionSampleingIndex = adtsSampleingIndex;\n  } else {\n    /*  for other browsers (Chrome/Vivaldi/Opera ...)\n        always force audio type to be HE-AAC SBR, as some browsers do not support audio codec switch properly (like Chrome ...)\n    */\n    adtsObjectType = 5;\n    config = new Array(4);\n    // if (manifest codec is HE-AAC or HE-AACv2) OR (manifest codec not specified AND frequency less than 24kHz)\n    if ((audioCodec && ((audioCodec.indexOf('mp4a.40.29') !== -1) ||\n      (audioCodec.indexOf('mp4a.40.5') !== -1))) ||\n      (!audioCodec && adtsSampleingIndex >= 6)) {\n      // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\n      // there is a factor 2 between frame sample rate and output sample rate\n      // multiply frequency by 2 (see table below, equivalent to substract 3)\n      adtsExtensionSampleingIndex = adtsSampleingIndex - 3;\n    } else {\n      // if (manifest codec is AAC) AND (frequency less than 24kHz AND nb channel is 1) OR (manifest codec not specified and mono audio)\n      // Chrome fails to play back with low frequency AAC LC mono when initialized with HE-AAC.  This is not a problem with stereo.\n      if (audioCodec && audioCodec.indexOf('mp4a.40.2') !== -1 && ((adtsSampleingIndex >= 6 && adtsChanelConfig === 1) ||\n            /vivaldi/i.test(userAgent)) ||\n        (!audioCodec && adtsChanelConfig === 1)) {\n        adtsObjectType = 2;\n        config = new Array(2);\n      }\n      adtsExtensionSampleingIndex = adtsSampleingIndex;\n    }\n  }\n  /* refer to http://wiki.multimedia.cx/index.php?title=MPEG-4_Audio#Audio_Specific_Config\n      ISO 14496-3 (AAC).pdf - Table 1.13 — Syntax of AudioSpecificConfig()\n    Audio Profile / Audio Object Type\n    0: Null\n    1: AAC Main\n    2: AAC LC (Low Complexity)\n    3: AAC SSR (Scalable Sample Rate)\n    4: AAC LTP (Long Term Prediction)\n    5: SBR (Spectral Band Replication)\n    6: AAC Scalable\n   sampling freq\n    0: 96000 Hz\n    1: 88200 Hz\n    2: 64000 Hz\n    3: 48000 Hz\n    4: 44100 Hz\n    5: 32000 Hz\n    6: 24000 Hz\n    7: 22050 Hz\n    8: 16000 Hz\n    9: 12000 Hz\n    10: 11025 Hz\n    11: 8000 Hz\n    12: 7350 Hz\n    13: Reserved\n    14: Reserved\n    15: frequency is written explictly\n    Channel Configurations\n    These are the channel configurations:\n    0: Defined in AOT Specifc Config\n    1: 1 channel: front-center\n    2: 2 channels: front-left, front-right\n  */\n  // audioObjectType = profile => profile, the MPEG-4 Audio Object Type minus 1\n  config[0] = adtsObjectType << 3;\n  // samplingFrequencyIndex\n  config[0] |= (adtsSampleingIndex & 0x0E) >> 1;\n  config[1] |= (adtsSampleingIndex & 0x01) << 7;\n  // channelConfiguration\n  config[1] |= adtsChanelConfig << 3;\n  if (adtsObjectType === 5) {\n    // adtsExtensionSampleingIndex\n    config[1] |= (adtsExtensionSampleingIndex & 0x0E) >> 1;\n    config[2] = (adtsExtensionSampleingIndex & 0x01) << 7;\n    // adtsObjectType (force to 2, chrome is checking that object type is less than 5 ???\n    //    https://chromium.googlesource.com/chromium/src.git/+/master/media/formats/mp4/aac.cc\n    config[2] |= 2 << 2;\n    config[3] = 0;\n  }\n  return { config: config, samplerate: adtsSampleingRates[adtsSampleingIndex], channelCount: adtsChanelConfig, codec: ('mp4a.40.' + adtsObjectType), manifestCodec: manifestCodec };\n}\n\nexport function isHeaderPattern (data, offset) {\n  return data[offset] === 0xff && (data[offset + 1] & 0xf6) === 0xf0;\n}\n\nexport function getHeaderLength (data, offset) {\n  return (data[offset + 1] & 0x01 ? 7 : 9);\n}\n\nexport function getFullFrameLength (data, offset) {\n  return ((data[offset + 3] & 0x03) << 11) |\n    (data[offset + 4] << 3) |\n    ((data[offset + 5] & 0xE0) >>> 5);\n}\n\nexport function isHeader (data, offset) {\n  // Look for ADTS header | 1111 1111 | 1111 X00X | where X can be either 0 or 1\n  // Layer bits (position 14 and 15) in header should be always 0 for ADTS\n  // More info https://wiki.multimedia.cx/index.php?title=ADTS\n  if (offset + 1 < data.length && isHeaderPattern(data, offset)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function probe (data, offset) {\n  // same as isHeader but we also check that ADTS frame follows last ADTS frame\n  // or end of data is reached\n  if (offset + 1 < data.length && isHeaderPattern(data, offset)) {\n    // ADTS header Length\n    let headerLength = getHeaderLength(data, offset);\n    // ADTS frame Length\n    let frameLength = headerLength;\n    if (offset + 5 < data.length) {\n      frameLength = getFullFrameLength(data, offset);\n    }\n\n    let newOffset = offset + frameLength;\n    if (newOffset === data.length || (newOffset + 1 < data.length && isHeaderPattern(data, newOffset))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function initTrackConfig (track, data, offset, audioCodec) {\n  if (!track.samplerate) {\n    let config = getAudioConfig(data, offset, audioCodec);\n    track.config = config.config;\n    track.samplerate = config.samplerate;\n    track.channelCount = config.channelCount;\n    track.codec = config.codec;\n    track.manifestCodec = config.manifestCodec;\n    // logger.log(`parsed codec:${track.codec},rate:${config.samplerate},nb channel:${config.channelCount}`);\n  }\n}\n\nexport function getFrameDuration (samplerate) {\n  return 1024 * 90000 / samplerate;\n}\n\nexport function parseFrameHeader (data, offset, pts, frameIndex, frameDuration) {\n  let headerLength; let frameLength; let stamp;\n  let length = data.length;\n\n  // The protection skip bit tells us if we have 2 bytes of CRC data at the end of the ADTS header\n  headerLength = getHeaderLength(data, offset);\n  // retrieve frame size\n  frameLength = getFullFrameLength(data, offset);\n  frameLength -= headerLength;\n\n  if ((frameLength > 0) && ((offset + headerLength + frameLength) <= length)) {\n    stamp = pts + frameIndex * frameDuration;\n    // logger.log(`AAC frame, offset/length/total/pts:${offset+headerLength}/${frameLength}/${data.byteLength}/${(stamp/90).toFixed(0)}`);\n    return { headerLength, frameLength, stamp };\n  }\n\n  return undefined;\n}\n\nexport function appendFrame (track, data, offset, pts, frameIndex) {\n  let frameDuration = getFrameDuration(track.samplerate);\n  let header = parseFrameHeader(data, offset, pts, frameIndex, frameDuration);\n  if (header) {\n    let stamp = header.stamp;\n    let headerLength = header.headerLength;\n    let frameLength = header.frameLength;\n\n    // logger.log(`AAC frame, offset/length/total/pts:${offset+headerLength}/${frameLength}/${data.byteLength}/${(stamp/90).toFixed(0)}`);\n    let aacSample = {\n      unit: data.subarray(offset + headerLength, offset + headerLength + frameLength),\n      pts: stamp,\n      dts: stamp\n    };\n\n    track.samples.push(aacSample);\n    track.len += frameLength;\n\n    return { sample: aacSample, length: frameLength + headerLength };\n  }\n\n  return undefined;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/processors/hlsjs-ts-demux/adts-utils.js","/**\n *  MPEG parser helper\n */\n\nconst MpegAudio = {\n\n  BitratesMap: [\n    32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448,\n    32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384,\n    32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320,\n    32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256,\n    8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160],\n\n  SamplingRateMap: [44100, 48000, 32000, 22050, 24000, 16000, 11025, 12000, 8000],\n\n  SamplesCoefficients: [\n    // MPEG 2.5\n    [\n      0, // Reserved\n      72, // Layer3\n      144, // Layer2\n      12 // Layer1\n    ],\n    // Reserved\n    [\n      0, // Reserved\n      0, // Layer3\n      0, // Layer2\n      0 // Layer1\n    ],\n    // MPEG 2\n    [\n      0, // Reserved\n      72, // Layer3\n      144, // Layer2\n      12 // Layer1\n    ],\n    // MPEG 1\n    [\n      0, // Reserved\n      144, // Layer3\n      144, // Layer2\n      12 // Layer1\n    ]\n  ],\n\n  BytesInSlot: [\n    0, // Reserved\n    1, // Layer3\n    1, // Layer2\n    4 // Layer1\n  ],\n\n  appendFrame: function (track, data, offset, pts, frameIndex) {\n    // Using http://www.datavoyage.com/mpgscript/mpeghdr.htm as a reference\n    if (offset + 24 > data.length) {\n      return undefined;\n    }\n\n    let header = this.parseHeader(data, offset);\n    if (header && offset + header.frameLength <= data.length) {\n      let frameDuration = header.samplesPerFrame * 90000 / header.sampleRate;\n      let stamp = pts + frameIndex * frameDuration;\n      let sample = { unit: data.subarray(offset, offset + header.frameLength), pts: stamp, dts: stamp };\n\n      track.config = [];\n      track.channelCount = header.channelCount;\n      track.samplerate = header.sampleRate;\n      track.samples.push(sample);\n      track.len += header.frameLength;\n\n      return { sample, length: header.frameLength };\n    }\n\n    return undefined;\n  },\n\n  parseHeader: function (data, offset) {\n    let headerB = (data[offset + 1] >> 3) & 3;\n    let headerC = (data[offset + 1] >> 1) & 3;\n    let headerE = (data[offset + 2] >> 4) & 15;\n    let headerF = (data[offset + 2] >> 2) & 3;\n    let headerG = (data[offset + 2] >> 1) & 1;\n    if (headerB !== 1 && headerE !== 0 && headerE !== 15 && headerF !== 3) {\n      let columnInBitrates = headerB === 3 ? (3 - headerC) : (headerC === 3 ? 3 : 4);\n      let bitRate = MpegAudio.BitratesMap[columnInBitrates * 14 + headerE - 1] * 1000;\n      let columnInSampleRates = headerB === 3 ? 0 : headerB === 2 ? 1 : 2;\n      let sampleRate = MpegAudio.SamplingRateMap[columnInSampleRates * 3 + headerF];\n      let channelCount = data[offset + 3] >> 6 === 3 ? 1 : 2; // If bits of channel mode are `11` then it is a single channel (Mono)\n      let sampleCoefficient = MpegAudio.SamplesCoefficients[headerB][headerC];\n      let bytesInSlot = MpegAudio.BytesInSlot[headerC];\n      let samplesPerFrame = sampleCoefficient * 8 * bytesInSlot;\n      let frameLength = parseInt(sampleCoefficient * bitRate / sampleRate + headerG, 10) * bytesInSlot;\n\n      return { sampleRate, channelCount, frameLength, samplesPerFrame };\n    }\n\n    return undefined;\n  },\n\n  isHeaderPattern: function (data, offset) {\n    return data[offset] === 0xff && (data[offset + 1] & 0xe0) === 0xe0 && (data[offset + 1] & 0x06) !== 0x00;\n  },\n\n  isHeader: function (data, offset) {\n    // Look for MPEG header | 1111 1111 | 111X XYZX | where X can be either 0 or 1 and Y or Z should be 1\n    // Layer bits (position 14 and 15) in header should be always different from 0 (Layer I or Layer II or Layer III)\n    // More info http://www.mp3-tech.org/programmer/frame_header.html\n    if (offset + 1 < data.length && this.isHeaderPattern(data, offset)) {\n      return true;\n    }\n\n    return false;\n  },\n\n  probe: function (data, offset) {\n    // same as isHeader but we also check that MPEG frame follows last MPEG frame\n    // or end of data is reached\n    if (offset + 1 < data.length && this.isHeaderPattern(data, offset)) {\n      // MPEG header Length\n      let headerLength = 4;\n      // MPEG frame Length\n      let header = this.parseHeader(data, offset);\n      let frameLength = headerLength;\n      if (header && header.frameLength) {\n        frameLength = header.frameLength;\n      }\n\n      let newOffset = offset + frameLength;\n      if (newOffset === data.length || (newOffset + 1 < data.length && this.isHeaderPattern(data, newOffset))) {\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\nexport default MpegAudio;\n\n\n\n// WEBPACK FOOTER //\n// ./src/processors/hlsjs-ts-demux/mpeg-audio-parser.js","/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding scheme used by h264.\n*/\n\nclass ExpGolomb {\n  constructor (data) {\n    this.data = data;\n    // the number of bytes left to examine in this.data\n    this.bytesAvailable = data.byteLength;\n    // the current word being examined\n    this.word = 0; // :uint\n    // the number of bits left to examine in the current word\n    this.bitsAvailable = 0; // :uint\n  }\n\n  // ():void\n  loadWord () {\n    let\n      data = this.data;\n\n    let bytesAvailable = this.bytesAvailable;\n\n    let position = data.byteLength - bytesAvailable;\n\n    let workingBytes = new Uint8Array(4);\n\n    let availableBytes = Math.min(4, bytesAvailable);\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(data.subarray(position, position + availableBytes));\n    this.word = new DataView(workingBytes.buffer).getUint32(0);\n    // track the amount of this.data that has been processed\n    this.bitsAvailable = availableBytes * 8;\n    this.bytesAvailable -= availableBytes;\n  }\n\n  // (count:int):void\n  skipBits (count) {\n    let skipBytes; // :int\n    if (this.bitsAvailable > count) {\n      this.word <<= count;\n      this.bitsAvailable -= count;\n    } else {\n      count -= this.bitsAvailable;\n      skipBytes = count >> 3;\n      count -= (skipBytes >> 3);\n      this.bytesAvailable -= skipBytes;\n      this.loadWord();\n      this.word <<= count;\n      this.bitsAvailable -= count;\n    }\n  }\n\n  // (size:int):uint\n  readBits (size) {\n    let\n      bits = Math.min(this.bitsAvailable, size);\n    // :uint\n\n    let valu = this.word >>> (32 - bits); // :uint\n    if (size > 32) {\n      console.error('Cannot read more than 32 bits at a time');\n    }\n\n    this.bitsAvailable -= bits;\n    if (this.bitsAvailable > 0) {\n      this.word <<= bits;\n    } else if (this.bytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n    if (bits > 0 && this.bitsAvailable) {\n      return valu << bits | this.readBits(bits);\n    } else {\n      return valu;\n    }\n  }\n\n  // ():uint\n  skipLZ () {\n    let leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < this.bitsAvailable; ++leadingZeroCount) {\n      if ((this.word & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        this.word <<= leadingZeroCount;\n        this.bitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n    // we exhausted word and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLZ();\n  }\n\n  // ():void\n  skipUEG () {\n    this.skipBits(1 + this.skipLZ());\n  }\n\n  // ():void\n  skipEG () {\n    this.skipBits(1 + this.skipLZ());\n  }\n\n  // ():uint\n  readUEG () {\n    let clz = this.skipLZ(); // :uint\n    return this.readBits(clz + 1) - 1;\n  }\n\n  // ():int\n  readEG () {\n    let valu = this.readUEG(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    } else {\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }\n  }\n\n  // Some convenience functions\n  // :Boolean\n  readBoolean () {\n    return this.readBits(1) === 1;\n  }\n\n  // ():int\n  readUByte () {\n    return this.readBits(8);\n  }\n\n  // ():int\n  readUShort () {\n    return this.readBits(16);\n  }\n  // ():int\n  readUInt () {\n    return this.readBits(32);\n  }\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n  count {number} the number of entries in this scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList (count) {\n    let\n      lastScale = 8;\n\n    let nextScale = 8;\n\n    let j;\n\n    let deltaScale;\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = this.readEG();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n      lastScale = (nextScale === 0) ? lastScale : nextScale;\n    }\n  }\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n  data {Uint8Array} the bytes of a sequence parameter set\n  {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSPS () {\n    let\n      frameCropLeftOffset = 0;\n\n    let frameCropRightOffset = 0;\n\n    let frameCropTopOffset = 0;\n\n    let frameCropBottomOffset = 0;\n\n    let profileIdc; let profileCompat; let levelIdc;\n\n    let numRefFramesInPicOrderCntCycle; let picWidthInMbsMinus1;\n\n    let picHeightInMapUnitsMinus1;\n\n    let frameMbsOnlyFlag;\n\n    let scalingListCount;\n\n    let i;\n\n    let readUByte = this.readUByte.bind(this);\n\n    let readBits = this.readBits.bind(this);\n\n    let readUEG = this.readUEG.bind(this);\n\n    let readBoolean = this.readBoolean.bind(this);\n\n    let skipBits = this.skipBits.bind(this);\n\n    let skipEG = this.skipEG.bind(this);\n\n    let skipUEG = this.skipUEG.bind(this);\n\n    let skipScalingList = this.skipScalingList.bind(this);\n\n    readUByte();\n    profileIdc = readUByte(); // profile_idc\n    profileCompat = readBits(5); // constraint_set[0-4]_flag, u(5)\n    skipBits(3); // reserved_zero_3bits u(3),\n    levelIdc = readUByte(); // level_idc u(8)\n    skipUEG(); // seq_parameter_set_id\n    // some profiles have more optional data we don't need\n    if (profileIdc === 100 ||\n        profileIdc === 110 ||\n        profileIdc === 122 ||\n        profileIdc === 244 ||\n        profileIdc === 44 ||\n        profileIdc === 83 ||\n        profileIdc === 86 ||\n        profileIdc === 118 ||\n        profileIdc === 128) {\n      let chromaFormatIdc = readUEG();\n      if (chromaFormatIdc === 3) {\n        skipBits(1);\n      } // separate_colour_plane_flag\n\n      skipUEG(); // bit_depth_luma_minus8\n      skipUEG(); // bit_depth_chroma_minus8\n      skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (readBoolean()) { // seq_scaling_matrix_present_flag\n        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (readBoolean()) { // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16);\n            } else {\n              skipScalingList(64);\n            }\n          }\n        }\n      }\n    }\n    skipUEG(); // log2_max_frame_num_minus4\n    let picOrderCntType = readUEG();\n    if (picOrderCntType === 0) {\n      readUEG(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      skipBits(1); // delta_pic_order_always_zero_flag\n      skipEG(); // offset_for_non_ref_pic\n      skipEG(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = readUEG();\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        skipEG();\n      } // offset_for_ref_frame[ i ]\n    }\n    skipUEG(); // max_num_ref_frames\n    skipBits(1); // gaps_in_frame_num_value_allowed_flag\n    picWidthInMbsMinus1 = readUEG();\n    picHeightInMapUnitsMinus1 = readUEG();\n    frameMbsOnlyFlag = readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      skipBits(1);\n    } // mb_adaptive_frame_field_flag\n\n    skipBits(1); // direct_8x8_inference_flag\n    if (readBoolean()) { // frame_cropping_flag\n      frameCropLeftOffset = readUEG();\n      frameCropRightOffset = readUEG();\n      frameCropTopOffset = readUEG();\n      frameCropBottomOffset = readUEG();\n    }\n    let pixelRatio = [1, 1];\n    if (readBoolean()) {\n      // vui_parameters_present_flag\n      if (readBoolean()) {\n        // aspect_ratio_info_present_flag\n        const aspectRatioIdc = readUByte();\n        switch (aspectRatioIdc) {\n        case 1: pixelRatio = [1, 1]; break;\n        case 2: pixelRatio = [12, 11]; break;\n        case 3: pixelRatio = [10, 11]; break;\n        case 4: pixelRatio = [16, 11]; break;\n        case 5: pixelRatio = [40, 33]; break;\n        case 6: pixelRatio = [24, 11]; break;\n        case 7: pixelRatio = [20, 11]; break;\n        case 8: pixelRatio = [32, 11]; break;\n        case 9: pixelRatio = [80, 33]; break;\n        case 10: pixelRatio = [18, 11]; break;\n        case 11: pixelRatio = [15, 11]; break;\n        case 12: pixelRatio = [64, 33]; break;\n        case 13: pixelRatio = [160, 99]; break;\n        case 14: pixelRatio = [4, 3]; break;\n        case 15: pixelRatio = [3, 2]; break;\n        case 16: pixelRatio = [2, 1]; break;\n        case 255: {\n          pixelRatio = [readUByte() << 8 | readUByte(), readUByte() << 8 | readUByte()];\n          break;\n        }\n        }\n      }\n    }\n    return {\n      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2)),\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - ((frameMbsOnlyFlag ? 2 : 4) * (frameCropTopOffset + frameCropBottomOffset)),\n      pixelRatio: pixelRatio\n    };\n  }\n\n  readSliceType () {\n    // skip NALu type\n    this.readUByte();\n    // discard first_mb_in_slice\n    this.readUEG();\n    // return slice_type\n    return this.readUEG();\n  }\n}\n\nexport default ExpGolomb;\n\n\n\n// WEBPACK FOOTER //\n// ./src/processors/hlsjs-ts-demux/exp-golomb-reader.js","/**\n * SAMPLE-AES decrypter\n*/\n\nimport Decrypter from './crypto/decrypter';\n\nclass SampleAesDecrypter {\n  constructor (observer, config, decryptdata, discardEPB) {\n    this.decryptdata = decryptdata;\n    this.discardEPB = discardEPB;\n    this.decrypter = new Decrypter(observer, config, { removePKCS7Padding: false });\n  }\n\n  decryptBuffer (encryptedData, callback) {\n    this.decrypter.decrypt(encryptedData, this.decryptdata.key.buffer, this.decryptdata.iv.buffer, callback);\n  }\n\n  // AAC - encrypt all full 16 bytes blocks starting from offset 16\n  decryptAacSample (samples, sampleIndex, callback, sync) {\n    let curUnit = samples[sampleIndex].unit;\n    let encryptedData = curUnit.subarray(16, curUnit.length - curUnit.length % 16);\n    let encryptedBuffer = encryptedData.buffer.slice(\n      encryptedData.byteOffset,\n      encryptedData.byteOffset + encryptedData.length);\n\n    let localthis = this;\n    this.decryptBuffer(encryptedBuffer, function (decryptedData) {\n      decryptedData = new Uint8Array(decryptedData);\n      curUnit.set(decryptedData, 16);\n\n      if (!sync) {\n        localthis.decryptAacSamples(samples, sampleIndex + 1, callback);\n      }\n    });\n  }\n\n  decryptAacSamples (samples, sampleIndex, callback) {\n    for (;; sampleIndex++) {\n      if (sampleIndex >= samples.length) {\n        callback();\n        return;\n      }\n\n      if (samples[sampleIndex].unit.length < 32) {\n        continue;\n      }\n\n      let sync = this.decrypter.isSync();\n\n      this.decryptAacSample(samples, sampleIndex, callback, sync);\n\n      if (!sync) {\n        return;\n      }\n    }\n  }\n\n  // AVC - encrypt one 16 bytes block out of ten, starting from offset 32\n  getAvcEncryptedData (decodedData) {\n    let encryptedDataLen = Math.floor((decodedData.length - 48) / 160) * 16 + 16;\n    let encryptedData = new Int8Array(encryptedDataLen);\n    let outputPos = 0;\n    for (let inputPos = 32; inputPos <= decodedData.length - 16; inputPos += 160, outputPos += 16) {\n      encryptedData.set(decodedData.subarray(inputPos, inputPos + 16), outputPos);\n    }\n\n    return encryptedData;\n  }\n\n  getAvcDecryptedUnit (decodedData, decryptedData) {\n    decryptedData = new Uint8Array(decryptedData);\n    let inputPos = 0;\n    for (let outputPos = 32; outputPos <= decodedData.length - 16; outputPos += 160, inputPos += 16) {\n      decodedData.set(decryptedData.subarray(inputPos, inputPos + 16), outputPos);\n    }\n\n    return decodedData;\n  }\n\n  decryptAvcSample (samples, sampleIndex, unitIndex, callback, curUnit, sync) {\n    let decodedData = this.discardEPB(curUnit.data);\n    let encryptedData = this.getAvcEncryptedData(decodedData);\n    let localthis = this;\n\n    this.decryptBuffer(encryptedData.buffer, function (decryptedData) {\n      curUnit.data = localthis.getAvcDecryptedUnit(decodedData, decryptedData);\n\n      if (!sync) {\n        localthis.decryptAvcSamples(samples, sampleIndex, unitIndex + 1, callback);\n      }\n    });\n  }\n\n  decryptAvcSamples (samples, sampleIndex, unitIndex, callback) {\n    for (;; sampleIndex++, unitIndex = 0) {\n      if (sampleIndex >= samples.length) {\n        callback();\n        return;\n      }\n\n      let curUnits = samples[sampleIndex].units;\n      for (;; unitIndex++) {\n        if (unitIndex >= curUnits.length) {\n          break;\n        }\n\n        let curUnit = curUnits[unitIndex];\n        if (curUnit.length <= 48 || (curUnit.type !== 1 && curUnit.type !== 5)) {\n          continue;\n        }\n\n        let sync = this.decrypter.isSync();\n\n        this.decryptAvcSample(samples, sampleIndex, unitIndex, callback, curUnit, sync);\n\n        if (!sync) {\n          return;\n        }\n      }\n    }\n  }\n}\n\nexport default SampleAesDecrypter;\n\n\n\n// WEBPACK FOOTER //\n// ./src/processors/hlsjs-ts-demux/sample-aes-decrypter.js","import AESCrypto from './aes-crypto';\nimport FastAESKey from './fast-aes-key';\nimport AESDecryptor from './aes-decryptor';\n\nclass Decrypter {\n  constructor (observer, config, { removePKCS7Padding = true } = {}) {\n    this.logEnabled = true;\n    this.observer = observer;\n    this.config = config;\n    this.removePKCS7Padding = removePKCS7Padding;\n    // built in decryptor expects PKCS7 padding\n    if (removePKCS7Padding) {\n      try {\n        const browserCrypto = self.crypto;\n        if (browserCrypto) {\n          this.subtle = browserCrypto.subtle || browserCrypto.webkitSubtle;\n        }\n      } catch (e) {}\n    }\n    this.disableWebCrypto = !this.subtle;\n  }\n\n  isSync () {\n    return (this.disableWebCrypto && this.config.enableSoftwareAES);\n  }\n\n  decrypt (data, key, iv, callback) {\n    if (this.disableWebCrypto && this.config.enableSoftwareAES) {\n      if (this.logEnabled) {\n        this.logEnabled = false;\n      }\n      let decryptor = this.decryptor;\n      if (!decryptor) {\n        this.decryptor = decryptor = new AESDecryptor();\n      }\n\n      decryptor.expandKey(key);\n      callback(decryptor.decrypt(data, 0, iv, this.removePKCS7Padding));\n    } else {\n      if (this.logEnabled) {\n        this.logEnabled = false;\n      }\n      const subtle = this.subtle;\n      if (this.key !== key) {\n        this.key = key;\n        this.fastAesKey = new FastAESKey(subtle, key);\n      }\n\n      this.fastAesKey.expandKey()\n        .then((aesKey) => {\n          // decrypt using web crypto\n          let crypto = new AESCrypto(subtle, iv);\n          crypto.decrypt(data, aesKey)\n            .catch((err) => {\n              this.onWebCryptoError(err, data, key, iv, callback);\n            })\n            .then((result) => {\n              callback(result);\n            });\n        })\n        .catch((err) => {\n          this.onWebCryptoError(err, data, key, iv, callback);\n        });\n    }\n  }\n\n  onWebCryptoError (err, data, key, iv, callback) {\n    if (this.config.enableSoftwareAES) {\n      logger.log('WebCrypto Error, disable WebCrypto API');\n      this.disableWebCrypto = true;\n      this.logEnabled = true;\n      this.decrypt(data, key, iv, callback);\n    } else {\n      logger.error(`decrypting error : ${err.message}`);\n      console.error({ fatal: true, reason: err.message });\n    }\n  }\n\n  destroy () {\n    let decryptor = this.decryptor;\n    if (decryptor) {\n      decryptor.destroy();\n      this.decryptor = undefined;\n    }\n  }\n}\n\nexport default Decrypter;\n\n\n\n// WEBPACK FOOTER //\n// ./src/processors/hlsjs-ts-demux/crypto/decrypter.js","export default class AESCrypto {\n  constructor (subtle, iv) {\n    this.subtle = subtle;\n    this.aesIV = iv;\n  }\n\n  decrypt (data, key) {\n    return this.subtle.decrypt({ name: 'AES-CBC', iv: this.aesIV }, key, data);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/processors/hlsjs-ts-demux/crypto/aes-crypto.js","class FastAESKey {\n  constructor (subtle, key) {\n    this.subtle = subtle;\n    this.key = key;\n  }\n\n  expandKey () {\n    return this.subtle.importKey('raw', this.key, { name: 'AES-CBC' }, false, ['encrypt', 'decrypt']);\n  }\n}\n\nexport default FastAESKey;\n\n\n\n// WEBPACK FOOTER //\n// ./src/processors/hlsjs-ts-demux/crypto/fast-aes-key.js","// PKCS7\nexport function removePadding (buffer) {\n  const outputBytes = buffer.byteLength;\n  const paddingBytes = outputBytes && (new DataView(buffer)).getUint8(outputBytes - 1);\n  if (paddingBytes) {\n    return buffer.slice(0, outputBytes - paddingBytes);\n  } else {\n    return buffer;\n  }\n}\n\nclass AESDecryptor {\n  constructor () {\n    // Static after running initTable\n    this.rcon = [0x0, 0x1, 0x2, 0x4, 0x8, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n    this.subMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)];\n    this.invSubMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)];\n    this.sBox = new Uint32Array(256);\n    this.invSBox = new Uint32Array(256);\n\n    // Changes during runtime\n    this.key = new Uint32Array(0);\n\n    this.initTable();\n  }\n\n  // Using view.getUint32() also swaps the byte order.\n  uint8ArrayToUint32Array_ (arrayBuffer) {\n    let view = new DataView(arrayBuffer);\n    let newArray = new Uint32Array(4);\n    for (let i = 0; i < 4; i++) {\n      newArray[i] = view.getUint32(i * 4);\n    }\n\n    return newArray;\n  }\n\n  initTable () {\n    let sBox = this.sBox;\n    let invSBox = this.invSBox;\n    let subMix = this.subMix;\n    let subMix0 = subMix[0];\n    let subMix1 = subMix[1];\n    let subMix2 = subMix[2];\n    let subMix3 = subMix[3];\n    let invSubMix = this.invSubMix;\n    let invSubMix0 = invSubMix[0];\n    let invSubMix1 = invSubMix[1];\n    let invSubMix2 = invSubMix[2];\n    let invSubMix3 = invSubMix[3];\n\n    let d = new Uint32Array(256);\n    let x = 0;\n    let xi = 0;\n    let i = 0;\n    for (i = 0; i < 256; i++) {\n      if (i < 128) {\n        d[i] = i << 1;\n      } else {\n        d[i] = (i << 1) ^ 0x11b;\n      }\n    }\n\n    for (i = 0; i < 256; i++) {\n      let sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n      sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n      sBox[x] = sx;\n      invSBox[sx] = x;\n\n      // Compute multiplication\n      let x2 = d[x];\n      let x4 = d[x2];\n      let x8 = d[x4];\n\n      // Compute sub/invSub bytes, mix columns tables\n      let t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n      subMix0[x] = (t << 24) | (t >>> 8);\n      subMix1[x] = (t << 16) | (t >>> 16);\n      subMix2[x] = (t << 8) | (t >>> 24);\n      subMix3[x] = t;\n\n      // Compute inv sub bytes, inv mix columns tables\n      t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n      invSubMix0[sx] = (t << 24) | (t >>> 8);\n      invSubMix1[sx] = (t << 16) | (t >>> 16);\n      invSubMix2[sx] = (t << 8) | (t >>> 24);\n      invSubMix3[sx] = t;\n\n      // Compute next counter\n      if (!x) {\n        x = xi = 1;\n      } else {\n        x = x2 ^ d[d[d[x8 ^ x2]]];\n        xi ^= d[d[xi]];\n      }\n    }\n  }\n\n  expandKey (keyBuffer) {\n    // convert keyBuffer to Uint32Array\n    let key = this.uint8ArrayToUint32Array_(keyBuffer);\n    let sameKey = true;\n    let offset = 0;\n\n    while (offset < key.length && sameKey) {\n      sameKey = (key[offset] === this.key[offset]);\n      offset++;\n    }\n\n    if (sameKey) {\n      return;\n    }\n\n    this.key = key;\n    let keySize = this.keySize = key.length;\n\n    if (keySize !== 4 && keySize !== 6 && keySize !== 8) {\n      throw new Error('Invalid aes key size=' + keySize);\n    }\n\n    let ksRows = this.ksRows = (keySize + 6 + 1) * 4;\n    let ksRow;\n    let invKsRow;\n\n    let keySchedule = this.keySchedule = new Uint32Array(ksRows);\n    let invKeySchedule = this.invKeySchedule = new Uint32Array(ksRows);\n    let sbox = this.sBox;\n    let rcon = this.rcon;\n\n    let invSubMix = this.invSubMix;\n    let invSubMix0 = invSubMix[0];\n    let invSubMix1 = invSubMix[1];\n    let invSubMix2 = invSubMix[2];\n    let invSubMix3 = invSubMix[3];\n\n    let prev;\n    let t;\n\n    for (ksRow = 0; ksRow < ksRows; ksRow++) {\n      if (ksRow < keySize) {\n        prev = keySchedule[ksRow] = key[ksRow];\n        continue;\n      }\n      t = prev;\n\n      if (ksRow % keySize === 0) {\n        // Rot word\n        t = (t << 8) | (t >>> 24);\n\n        // Sub word\n        t = (sbox[t >>> 24] << 24) | (sbox[(t >>> 16) & 0xff] << 16) | (sbox[(t >>> 8) & 0xff] << 8) | sbox[t & 0xff];\n\n        // Mix Rcon\n        t ^= rcon[(ksRow / keySize) | 0] << 24;\n      } else if (keySize > 6 && ksRow % keySize === 4) {\n        // Sub word\n        t = (sbox[t >>> 24] << 24) | (sbox[(t >>> 16) & 0xff] << 16) | (sbox[(t >>> 8) & 0xff] << 8) | sbox[t & 0xff];\n      }\n\n      keySchedule[ksRow] = prev = (keySchedule[ksRow - keySize] ^ t) >>> 0;\n    }\n\n    for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n      ksRow = ksRows - invKsRow;\n      if (invKsRow & 3) {\n        t = keySchedule[ksRow];\n      } else {\n        t = keySchedule[ksRow - 4];\n      }\n\n      if (invKsRow < 4 || ksRow <= 4) {\n        invKeySchedule[invKsRow] = t;\n      } else {\n        invKeySchedule[invKsRow] = invSubMix0[sbox[t >>> 24]] ^ invSubMix1[sbox[(t >>> 16) & 0xff]] ^ invSubMix2[sbox[(t >>> 8) & 0xff]] ^ invSubMix3[sbox[t & 0xff]];\n      }\n\n      invKeySchedule[invKsRow] = invKeySchedule[invKsRow] >>> 0;\n    }\n  }\n\n  // Adding this as a method greatly improves performance.\n  networkToHostOrderSwap (word) {\n    return (word << 24) | ((word & 0xff00) << 8) | ((word & 0xff0000) >> 8) | (word >>> 24);\n  }\n\n  decrypt (inputArrayBuffer, offset, aesIV, removePKCS7Padding) {\n    let nRounds = this.keySize + 6;\n    let invKeySchedule = this.invKeySchedule;\n    let invSBOX = this.invSBox;\n\n    let invSubMix = this.invSubMix;\n    let invSubMix0 = invSubMix[0];\n    let invSubMix1 = invSubMix[1];\n    let invSubMix2 = invSubMix[2];\n    let invSubMix3 = invSubMix[3];\n\n    let initVector = this.uint8ArrayToUint32Array_(aesIV);\n    let initVector0 = initVector[0];\n    let initVector1 = initVector[1];\n    let initVector2 = initVector[2];\n    let initVector3 = initVector[3];\n\n    let inputInt32 = new Int32Array(inputArrayBuffer);\n    let outputInt32 = new Int32Array(inputInt32.length);\n\n    let t0; let t1; let t2; let t3;\n    let s0; let s1; let s2; let s3;\n    let inputWords0; let inputWords1; let inputWords2; let inputWords3;\n\n    let ksRow; let i;\n    let swapWord = this.networkToHostOrderSwap;\n\n    while (offset < inputInt32.length) {\n      inputWords0 = swapWord(inputInt32[offset]);\n      inputWords1 = swapWord(inputInt32[offset + 1]);\n      inputWords2 = swapWord(inputInt32[offset + 2]);\n      inputWords3 = swapWord(inputInt32[offset + 3]);\n\n      s0 = inputWords0 ^ invKeySchedule[0];\n      s1 = inputWords3 ^ invKeySchedule[1];\n      s2 = inputWords2 ^ invKeySchedule[2];\n      s3 = inputWords1 ^ invKeySchedule[3];\n\n      ksRow = 4;\n\n      // Iterate through the rounds of decryption\n      for (i = 1; i < nRounds; i++) {\n        t0 = invSubMix0[s0 >>> 24] ^ invSubMix1[(s1 >> 16) & 0xff] ^ invSubMix2[(s2 >> 8) & 0xff] ^ invSubMix3[s3 & 0xff] ^ invKeySchedule[ksRow];\n        t1 = invSubMix0[s1 >>> 24] ^ invSubMix1[(s2 >> 16) & 0xff] ^ invSubMix2[(s3 >> 8) & 0xff] ^ invSubMix3[s0 & 0xff] ^ invKeySchedule[ksRow + 1];\n        t2 = invSubMix0[s2 >>> 24] ^ invSubMix1[(s3 >> 16) & 0xff] ^ invSubMix2[(s0 >> 8) & 0xff] ^ invSubMix3[s1 & 0xff] ^ invKeySchedule[ksRow + 2];\n        t3 = invSubMix0[s3 >>> 24] ^ invSubMix1[(s0 >> 16) & 0xff] ^ invSubMix2[(s1 >> 8) & 0xff] ^ invSubMix3[s2 & 0xff] ^ invKeySchedule[ksRow + 3];\n        // Update state\n        s0 = t0;\n        s1 = t1;\n        s2 = t2;\n        s3 = t3;\n\n        ksRow = ksRow + 4;\n      }\n\n      // Shift rows, sub bytes, add round key\n      t0 = ((invSBOX[s0 >>> 24] << 24) ^ (invSBOX[(s1 >> 16) & 0xff] << 16) ^ (invSBOX[(s2 >> 8) & 0xff] << 8) ^ invSBOX[s3 & 0xff]) ^ invKeySchedule[ksRow];\n      t1 = ((invSBOX[s1 >>> 24] << 24) ^ (invSBOX[(s2 >> 16) & 0xff] << 16) ^ (invSBOX[(s3 >> 8) & 0xff] << 8) ^ invSBOX[s0 & 0xff]) ^ invKeySchedule[ksRow + 1];\n      t2 = ((invSBOX[s2 >>> 24] << 24) ^ (invSBOX[(s3 >> 16) & 0xff] << 16) ^ (invSBOX[(s0 >> 8) & 0xff] << 8) ^ invSBOX[s1 & 0xff]) ^ invKeySchedule[ksRow + 2];\n      t3 = ((invSBOX[s3 >>> 24] << 24) ^ (invSBOX[(s0 >> 16) & 0xff] << 16) ^ (invSBOX[(s1 >> 8) & 0xff] << 8) ^ invSBOX[s2 & 0xff]) ^ invKeySchedule[ksRow + 3];\n      ksRow = ksRow + 3;\n\n      // Write\n      outputInt32[offset] = swapWord(t0 ^ initVector0);\n      outputInt32[offset + 1] = swapWord(t3 ^ initVector1);\n      outputInt32[offset + 2] = swapWord(t2 ^ initVector2);\n      outputInt32[offset + 3] = swapWord(t1 ^ initVector3);\n\n      // reset initVector to last 4 unsigned int\n      initVector0 = inputWords0;\n      initVector1 = inputWords1;\n      initVector2 = inputWords2;\n      initVector3 = inputWords3;\n\n      offset = offset + 4;\n    }\n\n    return removePKCS7Padding ? removePadding(outputInt32.buffer) : outputInt32.buffer;\n  }\n\n  destroy () {\n    this.key = undefined;\n    this.keySize = undefined;\n    this.ksRows = undefined;\n\n    this.sBox = undefined;\n    this.invSBox = undefined;\n    this.subMix = undefined;\n    this.invSubMix = undefined;\n    this.keySchedule = undefined;\n    this.invKeySchedule = undefined;\n\n    this.rcon = undefined;\n  }\n}\n\nexport default AESDecryptor;\n\n\n\n// WEBPACK FOOTER //\n// ./src/processors/hlsjs-ts-demux/crypto/aes-decryptor.js"],"sourceRoot":""}